{"version":3,"sources":["webpack://executableHTML/webpack/universalModuleDefinition","webpack://executableHTML/webpack/bootstrap","webpack://executableHTML/(webpack)/buildin/harmony-module.js","webpack://executableHTML/./src/customElements/aa-baseElement/baseElement.js","webpack://executableHTML/./src/customElements/aa-checkboxes/aa-checkboxes.js","webpack://executableHTML/./src/customElements/aa-choice-item/aa-choice-item.js","webpack://executableHTML/./src/customElements/aa-choose/aa-choose.js","webpack://executableHTML/./src/customElements/aa-choose/aa-otherwise/aa-otherwise.js","webpack://executableHTML/./src/customElements/aa-choose/aa-when/aa-when.js","webpack://executableHTML/./src/customElements/aa-function/aa-function-random.js","webpack://executableHTML/./src/customElements/aa-likert-scale/aa-likert-scale.js","webpack://executableHTML/./src/customElements/aa-memory/aa-memory.js","webpack://executableHTML/./src/customElements/aa-multiple-choice/aa-multiple-choice.js","webpack://executableHTML/./src/customElements/aa-screen/aa-screen.js","webpack://executableHTML/./src/customElements/aa-sequence/aa-jump/aa-jump.js","webpack://executableHTML/./src/customElements/aa-sequence/aa-sequence.js","webpack://executableHTML/./src/customElements/aa-session/aa-session.js","webpack://executableHTML/./src/customElements/aa-text-answer/aa-text-answer.js","webpack://executableHTML/./src/customElements/aa-variable/aa-variable.js","webpack://executableHTML/./src/index.js","webpack://executableHTML/./src/lib/jsep/jsep.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACpBA;;AAEA;AACA,mBAAmB,gBAAgB;AACnC;AACA;AACA;AACA;AACA;;AAEA;;AAEe;;AAEf;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,2BAA2B,4BAA4B;AACvD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0CAA0C;AACrE;AACA;;AAEA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;;;AAGA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA,gDAAgD,aAAa;AAC7D,sDAAsD,cAAc;AACpE,8BAA8B,eAAe;AAC7C,qBAAqB;AACrB;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,gBAAgB;AACvC;AACA;AACA;AACA,8BAA8B,qBAAqB;AACnD,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,8DAA8D,wBAAwB;AACtF;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA,wDAAwD,wBAAwB;AAChF,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzLA;AAAA;AAAA;AAAA;AAA2D;AACd;;AAE9B,2BAA2B,sEAAW;;;;AAIrD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;;;;AAItD;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;;AAEA;;AAEA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;;;AAGA,aAAa,sEAAW;AACxB,kCAAkC,sEAAW;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA,sEAAW,kD;;;;;;;;;;;;ACzIX;AAAA;AAAA;AAA2D;AAC5C,2BAA2B,sEAAW;;;AAGrD;AACA;AACA;AACA;AACA;AACA,a;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA,sEAAW,mD;;;;;;;;;;;;AClCX;AAAA;AAAA;AAAA;AAAA;AAAA;AAA6D;AAC/B;AACU;;;AAGE;AAC3B,uBAAuB,sEAAW;;;AAGjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sEAAW;AAC3B;AACA;AACA;AACA,iBAAiB;AACjB,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA,uCAAuC,sEAAW;AAClD;AACA,aAAa;AACb,mCAAmC,sEAAW;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,4BAA4B,iEAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,qBAAqB;AAC5D,4CAA4C,qBAAqB;AACjE,6CAA6C,sBAAsB;AACnE,sCAAsC,MAAM;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sEAAW;;;;;;;;;;;;;;ACjJX;AAAA;AAAA;AAA8D;;AAE/C,0BAA0B,sEAAW;;AAEpD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA,sEAAW;;;;;;;;;;;;;AClBX;AAAA;AAAA;AAAgE;;AAEjD,qBAAqB,sEAAW;;;AAG/C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sEAAW;;;;;;;;;;;;;;AC9CX;AAAA;AAAA;AAA2D;;AAE5C,+BAA+B,sEAAW;;;AAGzD;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD,0BAA0B,eAAe;AACzC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA,sEAAW;;;;;;;;;;;;;;AC3EX;AAAA;AAAA;AAAA;AAA2D;AACgB;;AAE5D,4BAA4B,sEAAW;;;AAGtD;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;;AAEA;;AAEA,uCAAuC,eAAe;AACtD;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA,oBAAoB,cAAc;AAClC,8CAA8C,IAAI,IAAI,IAAI;AAC1D;AACA,yEAAyE,UAAU,IAAI,MAAM;AAC7F;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;;AAGA;AACA,iC;AACA;;;;;AAKA;;AAEA,sEAAW;;;;;;;;;;;;;;AC7FX;AAAA;AAAA;AAA4D;;;;AAI7C,uBAAuB,sEAAW;;AAEjD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sEAAW;;;;;;;;;;;;;AC3BX;AAAA;AAAA;AAAA;AAA2D;AACd;;AAE9B,+BAA+B,sEAAW;;;;AAIzD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;;AAGb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;;AAEA;AACA;AACA;AACA,uBAAuB,4BAA4B;AACnD;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa,sEAAW;AACxB,kCAAkC,sEAAW;AAC7C,SAAS;AACT;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;AAGA,sEAAW,2D;;;;;;;;;;;;ACpHX;AAAA;AAAA;AAA6D;;;AAG9C,uBAAuB,sEAAW;;AAEjD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,wCAAwC,wCAAwC;AAChF;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;;AAEA;AACA;;AAEA;AACA;;AAEA,4BAA4B,QAAQ;AACpC;;AAEA;AACA;AACA;;;AAGA;;AAEA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,mD;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,4FAA4F,WAAW;AACvG,SAAS;AACT,uDAAuD,WAAW;AAClE;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA,6CAA6C;AAC7C;AACA,kEAAkE,iBAAiB,qBAAqB,oBAAoB;AAC5H,iEAAiE,c;AACjE;AACA,6DAA6D;AAC7D;AACA;;AAEA,+DAA+D,yBAAyB,yBAAyB,EAAE;AACnH;AACA;AACA;AACA;AACA;AACA,sCAAsC,aAAa;;AAEnD;;;;;;;AAOA;;AAEA;AACA;AACA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uBAAuB,0BAA0B;AACjD,gBAAgB,sEAAW,iCAAiC,+BAA+B;AAC3F;AACA;AACA;;;;AAIA;AACA;;AAEA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA,aAAa;AACb;AACA,iCAAiC,oBAAoB;AACrD;AACA;AACA;AACA;AACA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA,uBAAuB,0BAA0B;AACjD,gBAAgB,sEAAW;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,sEAAW;;;;;;;;;;;;;;ACxOX;AAAA;AAAA;AAA8D;;AAE/C,qBAAqB,sEAAW;;;;AAI/C;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,sCAAsC;AACtE;AACA;AACA;;AAEA,sEAAW;;;;;;;;;;;;;ACjCX;AAAA;AAAA;AAAA;AAA6D;AAC/B;;;;AAIf,yBAAyB,sEAAW;;AAEnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,0CAA0C,eAAe;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;;AAGA;AACA,4BAA4B;AAC5B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;AAKA;AACA;;;AAGA,+BAA+B,QAAQ;AACvC;;AAEA;AACA,+BAA+B,0CAA0C;AACzE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wCAAwC,sEAAW;AACnD;AACA;AACA;AACA,0EAA0E,QAAQ;AAClF;AACA;AACA,oCAAoC,sEAAW;AAC/C;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA,gCAAgC,0BAA0B;AAC1D,6CAA6C,iBAAiB;AAC9D,kBAAkB,mCAAmC;AACrD,SAAS;AACT;AACA;AACA;AACA;;AAEA,sEAAW;;;;;;;;;;;;;;;AClKX;AAAA;AAAA;AAAA;AAA4D;;AAEvB;;AAEtB,wBAAwB,sEAAW;;AAElD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA;AACA;;;AAGA;AACA;AACA;;AAEA,0CAA0C,iBAAiB;AAC3D;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,mEAAmE,yBAAyB,QAAQ,EAAE;AACtG;AACA;AACA;AACA;AACA;;;AAGA,SAAS;;AAET;AACA;AACA,sEAAsE,sCAAsC;AAC5G;AACA,SAAS;;;AAGT;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;AACA,QAAQ,sEAAW,iC;AACnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,sEAAW;;;;;;;;;;;;;;;;;;;;ACzIX;AAAA;AAAA;AAA2D;AAC5C,2BAA2B,sEAAW;;;;AAIrD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;;AAEA,wEAAwE,KAAK;;AAE7E;AACA;AACA;AACA,oBAAoB,8BAA8B;AAClD,oBAAoB,8BAA8B;AAClD;;AAEA;AACA;AACA,SAAS;AACT;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA;AACA;AACA,qBAAqB;;AAErB,iBAAiB;AACjB;AACA,SAAS;;AAET;;AAEA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA,4B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa;AACnC;;AAEA;;AAEA,sEAAW,mD;;;;;;;;;;;;ACxLX;AAAA;AAAA;AAA4D;AAC7C,yBAAyB,sEAAW;;AAEnD;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;;AAEb;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA,uCAAuC,eAAe;AACtD;;AAEA;AACA;AACA;AACA,gCAAgC,kBAAkB;AAClD,yBAAyB;AACzB;;;AAGA;;AAEA,sEAAW;;;;;;;;;;;;;;AC1CX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACyE;AACJ;AACa;AACnB;AACI;AACe;AACnB;AACA;AACM;AACH;AACW;AACY;AACZ;AACF;AACK;AAChF;;;;;;;;;;;;;;;AChBA;AAAA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,iCAAiC;AACjC,GAAG;AACH;AACA;AACA;AACA;AACA,wEAAwE;AACxE,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wEAAwE;AACxE,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,iCAAiC,EAAE;AAC5D,6BAA6B,qCAAqC,EAAE;AACpE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;;AAElB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,wDAAwD;AACxD;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mCAAmC;AACnC;AACA;AACA,oCAAoC;AACpC;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,8BAA8B;AAC9B,gCAAgC;AAChC;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN,cAAc;AACd,MAAM;AACN;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;AACA;AACA;AACA,OAAO,gCAAgC;AACvC;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,wCAAwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,+DAA+D;;AAE5F;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,EAAE;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY,OAAO;AACnB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,MAAM,KAA6B;AACnC;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC,CAAC,SAAI,CAAC,EAAE","file":"aaCustomElements.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"executableHTML\"] = factory();\n\telse\n\t\troot[\"executableHTML\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\n\n\nvar html = function (txt, ...val) {\n\n    let result = txt[0];\n    for (let i = 0; i < val.length; i++) {\n        result += val[i];\n        result += txt[i + 1];\n    }\n    return result;\n}\n\nif (window) window.html = html;\n\nexport default class BaseElement extends HTMLElement {\n\n    static registerAAElement(name, elem) {\n        if (!customElements.get(name)) {\n            window.AANodeNames = window.AANodeNames || [];\n            window.AANodeNames.push(name.toUpperCase());\n            customElements.define(name, elem);\n        }\n    }\n\n    static isAAElement(node) {\n        if (AANodeNames.indexOf(node.nodeName) != -1) {\n            return true;\n        }\n        return false;\n    }\n\n    static createFragmentForNode(node) {\n        let fragment = document.createDocumentFragment();\n        for (let i = 0; i < node.childNodes.length; i++) {\n            fragment.append(node.childNodes[i].cloneNode(true));\n        }\n        return fragment;\n    }\n\n    static createHolderForNode(o) {\n        let node = o.cloneNode(false);\n        node.innerFragment = BaseElement.createFragmentForNode(o);\n        return node;\n    }\n\n    static scanAndReplace(node) {\n        if (node.nodeName === \"TEMPLATE\") {\n            BaseElement.scanAndReplace(node.content);\n        }\n        else if (BaseElement.isAAElement(node)) {\n            let holder = BaseElement.createHolderForNode(node);\n            node.replaceWith(holder);\n        } else\n            for (let i = 0; i < node.childNodes.length; i++) {\n                BaseElement.scanAndReplace(node.childNodes[i]);\n            }\n    }\n\n    constructor() {\n        super();\n        // console.log(this.nodeName+\"#\"+this.id, \"created\");\n        this._props = this.makePropertiesFromAttributes();\n    }\n\n    connectedCallback() {\n        // console.log(this.id, \" connected\");\n        this._attachedTimestamp = new Date().getTime();\n        this._debug = (this.debug === true) || (this.debug === null);\n        if (this.innerFragment) {\n            BaseElement.scanAndReplace(this.innerFragment);\n            for (let i = 0; i < this.innerFragment.childNodes.length; i++) {\n                this.appendChild(BaseElement.copy(this.innerFragment.childNodes[i]));\n            }\n\n        }\n    }\n\n\n    makePropertiesFromAttributes() {\n\n        let ElementClass = customElements.get(this.tagName.toLowerCase());\n\n        let attr = ElementClass.observedAttributes;\n        if (!attr) return null;\n        let props = {};\n        for (let i = 0; i < attr.length; i++) {\n            let prop = this.toCamelCase(attr[i]);\n            props[prop] = attr[i];\n\n\n            if (typeof this[prop] != 'undefined') {\n                continue;\n            } else {\n\n                Object.defineProperty(this, prop, {\n                    get: () => {\n\n                        let result = this.getAttribute(attr[i]);\n                        if (result === 'true') { return true; }\n                        else if (result === 'false') { return false; }\n                        else { return result; }\n                    },\n                    set: (value) => {\n                        this.setAttribute(attr[i], value);\n                    }\n                });\n            }\n        }\n        return props;\n    }\n\n    toCamelCase(str) {\n        let words = str.split('-');\n        let result = words[0];\n        for (let i = 1; i < words.length; i++) {\n            result += words[i][0].toUpperCase() + words[i].substr(1);\n        }\n        return result;\n    }\n\n    toHyphenated(str) {\n        let result = '';\n        for (let i = 0; i < str.length; i++) {\n            let letter = str[i];\n            if (letter.toLowerCase() !== letter) {\n                // letter is uppercase\n                result += `-${letter.toLowerCase()}`;\n            } else {\n                result += letter;\n            }\n        }\n        return result;\n    }\n\n    static copy(node) {\n        let nodeCopy;\n        if (BaseElement.isAAElement(node)) {\n\n            if (node.innerFragment) {\n                nodeCopy = node.cloneNode();\n                nodeCopy.innerFragment = BaseElement.createFragmentForNode(node.innerFragment);\n            } else {\n                nodeCopy = node.cloneNode();\n                nodeCopy.innerFragment = BaseElement.createFragmentForNode(node);\n            }\n        }\n        else {\n            nodeCopy = node.cloneNode(true);\n        }\n        return nodeCopy;\n    }\n\n\n    _dispatchDebugEvent(detail) {\n        if (this.debug) {\n            this.dispatchEvent(new CustomEvent('debugEvent', { detail, bubbles: true }));\n        }\n    }\n\n\n\n    _dispatchEndEvent(detail) {\n        //  use setTimeout to allow aaSequence.next() to return,\n        //  so that calls to aaSequence.next are not recursive\n        // setTimeout(()=>{\n        // debugger;\n        this.dispatchEvent(new CustomEvent('endEvent', { bubbles: true, detail }));\n        // },0);\n    }\n\n    _getParentSession() {\n        let _sessionElement = this;\n        while ((_sessionElement != null) && (_sessionElement.nodeName != 'AA-SESSION')) {\n            _sessionElement = _sessionElement.parentNode;\n        }\n        return _sessionElement;\n    }\n}\n\n\nif (!customElements.get('aa-base-element')) {\n    window.AANodeNames = window.AANodeNames || [];\n    window.AANodeNames.push('AA-BASE-ELEMENT');\n    customElements.define('aa-base-element', BaseElement);\n}\n","import BaseElement from '../aa-baseElement/baseElement.js';\nimport '../aa-choice-item/aa-choice-item.js';\n\nexport default class AACheckboxes extends BaseElement {\n\n\n\n    static get properties() {\n        return {\n            horizontal: {\n                type: Boolean,\n                value: false,\n                userDefined: true\n            },\n\n            vertical: {\n                type: Boolean,\n                value: true,\n                userDefined: true\n            },\n\n            name: {\n                type: String,\n                userDefined: true\n            },\n\n            value: {\n                type: String,\n                userDefined: false\n            },\n\n\n        }\n    }\n\n    static get acceptsElements() {\n        return [\n            'aa-choice-item'\n        ]\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AACheckboxes.properties);\n    }\n\n\n    get value() {\n\n        let result = [];\n        if (this.boxes) {\n            for (let i = 0; i < this.boxes.length; i++) {\n                if (this.boxes[i].checked) {\n                    result.push(this.boxes[i].value);\n                }\n                else {\n                    result.push(null);\n                }\n            }\n\n        }\n        console.log(result);\n        return result\n    }\n\n    set value(val) {\n        this.setAttribute('value', val);\n        this.boxGroup.selected = val;\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n\n\n\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.root.innerHTML = this.css + this.html;\n        this.boxes = [];\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.attachToShadowDomAccordingToKind(this.childNodes[i]);\n        }\n\n        this.boxes = this.root.querySelectorAll('paper-checkbox')\n\n        let val = this.getAttribute('value');\n        if (this.boxes) {\n            for (let i = 0; i < this.boxes.length; i++) {\n                if (this.boxes[i].value == val) {\n                    this.boxes[i].checked = true\n                }\n            }\n        }\n\n\n    }\n\n    attachToShadowDomAccordingToKind(node) {\n\n\n        if (!BaseElement.isAAElement(node)) {\n            this.root.appendChild(BaseElement.copy(node));\n        } else {\n            if (node.tagName === 'AA-CHOICE-ITEM') {\n                let child = document.createElement('paper-checkbox');\n                if (node.getAttribute('value')) {\n                    child.setAttribute('name', node.getAttribute('value'));\n                    child.setAttribute('value', node.getAttribute('value'));\n                } else {\n                    child.setAttribute('name', node.innerText.trim());\n                    child.setAttribute('value', node.innerText.trim());\n                }\n                if (!((this.horizontal === '') || (this.horizontal))) {\n                    child.style.display = 'block';\n                }\n                child.innerHTML = node.innerHTML;\n                this.root.appendChild(child);\n\n                console.log('name: ', child.name)\n                this.boxes.push(child);\n            }\n        }\n    }\n\n    get html() {\n        return html``;\n    }\n\n    get css() {\n        return ``;\n    }\n\n}\n\n\nBaseElement.registerAAElement('aa-checkboxes', AACheckboxes);","import BaseElement from '../aa-baseElement/baseElement.js';\nexport default class AAChoiceItem extends BaseElement {\n\n\n    static get properties(){\n        return{\n            value:{\n                type:String,\n                userDefined:true\n            }           \n        }\n    }\n    static get observedAttributes() {\n        return [\n            'name',\n            'value'\n        ];\n    }\n\n    static get acceptsElements(){\n        return null;\n    }\n\n    constructor() {\n        super();\n\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n    }\n}\n\nBaseElement.registerAAElement('aa-choice-item', AAChoiceItem);","import BaseElement from './../aa-baseElement/baseElement.js';\nimport './aa-when/aa-when.js';\nimport './aa-otherwise/aa-otherwise.js';\n\n\nimport jsep from '../../lib/jsep/jsep.js';\nexport default class AAChoose extends BaseElement {\n\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:true\n            },\n            \"should-run\":{\n                type:Boolean,\n                value:true,\n                userDefined:false\n            },\n            \"debug\":{\n                type:Boolean,\n                value:false,\n                userDefined:false\n            }\n        }\n    }\n\n    static get acceptsElements(){\n        return[\n            \"aa-when\", \"aa-otherwise\"\n        ]\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AAChoose.properties);\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = '<slot></slot>';\n        this.originalContent = this.innerHTML;\n    }\n\n\n    connectedCallback() {\n        this._shouldRun = (this.shouldRun === null) || (this.shouldRun === true);\n        this.sessionElement = this._getParentSession();\n        if (this._shouldRun) {\n            if (typeof this.innerFragment !== 'undefined') {\n                BaseElement.scanAndReplace(this.innerFragment);\n                let nodes = this._getNodeToInstantiate();\n                if (nodes.length === 0) {\n                    this._dispatchEndEvent();\n                } else {\n                    for (let i = 0; i < nodes.length; i++) {\n                        let node = nodes[i];\n                        if (typeof node !== 'undefined') {\n                            // this.appendChild(node);\n                            this.parentNode.insertBefore(node, this.nextSibling);\n                        }\n                    }\n                    this._dispatchEndEvent();\n                }\n            }\n            else {\n                if (this.childNodes.length === 0) {\n                    this._dispatchEndEvent();\n                }\n            }\n        }\n        this.remove();\n    }\n\n    _getNodeToInstantiate() {\n        let nodesToReturn = [];\n        let nodeOtherwise = [];\n        let isChildTrue = false;\n        for (let i = 0; i < this.innerFragment.children.length; i++) {\n            let child = this.innerFragment.children[i];\n            if (child.nodeName === 'AA-WHEN') {\n                isChildTrue = this.evaluate(child);\n                if (isChildTrue) {\n                    nodesToReturn.push(BaseElement.copy(child).innerFragment);\n                }\n            } else if (child.nodeName === 'AA-OTHERWISE') {\n                nodeOtherwise.push(BaseElement.copy(child).innerFragment);\n            }\n        }\n        if (nodesToReturn.length === 0) {\n            return nodeOtherwise;\n        }\n        else {\n            return nodesToReturn;\n        }\n    }\n\n\n    evaluate(element) {\n        let test = element.getAttribute('test');\n        if ((test == null) || (test == '')) return null;\n        return this.evaluateTestExpression(test);\n    }\n\n    evaluateTestExpression(test) {\n\n        let expr = this.replaceExpressionIdentifiersWithValues(test);\n        // after replacing known variable names with their values in the string, test to see if the expression can be parsed\n        try {\n            var parseTree = jsep(expr);\n            if ((parseTree.left.type === 'Literal') && (parseTree.right.type === 'Literal')) {\n                return eval(expr);\n            }\n            else {\n                // there are still strings in the expression, which are unknown, an exception should be raised\n                throw 'unknown identifiers in expression : ' + expr;\n            }\n        } catch (e) {\n            console.error('parse error:', e);\n        }\n    }\n\n    replaceExpressionIdentifiersWithValues(expression, sessionElement) {\n        let session = sessionElement || this._getParentSession();\n        let result = expression.toUpperCase();\n\n        let originalIdentifiers = Object.keys(session.getDataDump());\n        let upperCaseIdentifiers = originalIdentifiers.map(s => s.toUpperCase());\n        for (let i in upperCaseIdentifiers) {\n            let value = session.getData(originalIdentifiers[i]);\n            let finalValue = parseInt(value);\n            if (finalValue != value) {\n                if (value === 'null') { finalValue = 'null'; }\n                else if (value === 'true') { finalValue = 'true'; }\n                else if (value === 'false') { finalValue = 'false'; }\n                else finalValue = `\"${value}\"`\n            }\n            let r = new RegExp(upperCaseIdentifiers[i], 'g');\n            result = result.replace(r, finalValue);\n        }\n        return result;\n    }\n}\n\nBaseElement.registerAAElement('aa-choose', AAChoose);\n\n","import BaseElement from '../../aa-baseElement/baseElement.js';\n\nexport default class AAOtherwise extends BaseElement {\n\n    static get acceptsElements(){\n        return null;\n    }\n    \n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n\n\nBaseElement.registerAAElement('aa-otherwise', AAOtherwise);\n","import BaseElement from './../../aa-baseElement/baseElement.js';\n\nexport default class AAWhen extends BaseElement {\n\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:false\n            },\n            \"should-run\":{\n                type:Boolean,\n                value:true,\n                userDefined:false\n            },\n            \"debug\":{\n                type:Boolean,\n                value:false,\n                userDefined:false\n            },\n            \"test\":{\n                type:String,\n                userDefined:true\n            }\n        }\n    }\n    static get acceptsElements(){\n        return null;\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AAWhen.properties);\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = '<slot></slot>'\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n\nBaseElement.registerAAElement('aa-when', AAWhen);\n\n","import BaseElement from '../aa-baseElement/baseElement.js';\n\nexport default class AAFunctionRandom extends BaseElement {\n\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:true\n            },\n           \n            \"debug\":{\n                type:Boolean,\n                value:false,\n                userDefined:false\n            },\n\n            \"value\":{\n                type:Number,\n                userDefined:false,\n            },\n\n            \"min\":{\n                type:Number,\n                userDefined:true,\n            },\n            \n            \"max\":{\n                type:Number,\n                userDefined:true,\n            },\n            \n\n        }\n    }\n\n    static get acceptsElements(){\n        return null\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AAFunctionRandom.properties);\n    }\n\n\n\n    constructor(){\n\n        super();\n    }\n\n    connectedCallback() {\n        let session = this._getParentSession();\n        this.value = this.getValue();\n        session.setData(this.name, this.value);\n        this._dispatchEndEvent({ autoDispatch: true });\n        if (!this.debug) { this.remove(); }\n    }\n\n    getValue() {\n        var parsedMin = parseFloat(this.min);\n        var parsedMax = parseFloat(this.max);\n        return this.getRandomInt(parsedMin, parsedMax);\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + 0.5) + min;\n    }\n\n\n}\n\nBaseElement.registerAAElement('aa-function-random', AAFunctionRandom);\n\n","import BaseElement from '../aa-baseElement/baseElement.js';\nimport AAMultipleChoice from '../aa-multiple-choice/aa-multiple-choice.js';\n\nexport default class AALikertScale extends BaseElement {\n\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:true\n            },\n           \n            \"debug\":{\n                type:Boolean,\n                value:false,\n                userDefined:false\n            },\n\n            \"value\":{\n                type:Number,\n                userDefined:false,\n            },\n\n            \"items\":{\n                type:Number,\n                userDefined:true,\n            },\n            \n\n        }\n    }\n\n    static get acceptsElements(){\n        return [];\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AALikertScale.properties);\n    }\n\n\n\n    constructor(){\n\n        super();\n\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.root.innerHTML = this.html;\n\n        this.mChoice = this.root.querySelector(\"aa-multiple-choice\")\n        this.choiceItems = this.mChoice.choiceItems\n    }\n\n\n    get html(){\n\n        let items = ``;\n        if(!this.items) this.items = 5;\n        for(let i=0; i<this.items; i++){\n            items += `<aa-choice-item name=\"${i+1}\">${i+1}</aa-choice-item>`;\n        }\n        let result =  html`<aa-multiple-choice horizontal=\"true\" name=\"${this.name}\">${items}</aa-multiple-choice>`\n        console.log(result);\n        return result;\n    }\n\n\n    get value(){\n\n        if(this.mChoice)\n        {\n            return parseInt(this.mChoice.value);\n        } else{\n            return parseInt(this.getAttribute('value'));\n        }\n    }\n\n\n    getValue() {\n       return this.mChoice.value; \n    }\n\n \n\n\n}\n\nBaseElement.registerAAElement('aa-likert-scale', AALikertScale);\n\n","import BaseElement from './../aa-baseElement/baseElement.js'\n\n\n\nexport default class AAMemory extends BaseElement {\n\n    get observedAttributes(){\n        return [\"name\"];\n    }\n\n    constructor(){\n        super();\n    }\n\n    connectedCallback(){\n        \n    }\n\n    setData(name,value){\n        this.dataset[name] = value;\n    }\n\n    getData(name){\n        return this.dataset[this.toHyphenated(name)];\n    }\n}\n\nBaseElement.registerAAElement('aa-memory', AAMemory);\n","import BaseElement from '../aa-baseElement/baseElement.js';\nimport '../aa-choice-item/aa-choice-item.js';\n\nexport default class AAMultipleChoice extends BaseElement {\n\n\n\n    static get properties(){\n        return {\n            horizontal:{\n                type:Boolean,\n                value:false,\n                userDefined:true\n            },\n\n            vertical:{\n                type:Boolean,\n                value:true,\n                userDefined:true\n            },\n            \n            name:{\n                type:String,\n                userDefined:true\n            },\n\n            value:{\n                type:String,\n                userDefined:false\n            },\n\n           \n        }\n    }\n\n    static get acceptsElements(){\n        return [\n            \"aa-choice-item\"\n        ]\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AAMultipleChoice.properties);\n    }\n\n\n    get value() {\n\n        if (this.radioGroup) {\n            return this.radioGroup.selected;\n        }\n        return this.getAttribute('value');\n    }\n\n    set value(val) {\n        this.setAttribute('value', val);\n        this.radioGroup.selected = val;\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = this.css + this.html;\n        this.radioGroup = this.root.querySelector('#radioGroup');\n        this.radioGroup.addEventListener('change', (e) => {\n            this.value = e.target.name;\n            console.log(this.value);\n        });\n\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.choiceItems = [];\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.attachToShadowDomAccordingToKind(this.childNodes[i]);\n        }\n\n        if (this.getAttribute('value')) {\n            this.radioGroup.setAttribute('selected', this.getAttribute('value'));\n        }\n    }\n\n    attachToShadowDomAccordingToKind(node) {\n        \n        if (!BaseElement.isAAElement(node)) {\n            this.root.appendChild(BaseElement.copy(node));\n        } else {\n            if (node.tagName === 'AA-CHOICE-ITEM') {\n                let child = document.createElement('paper-radio-button');\n                if (node.getAttribute('value')) {\n                    child.setAttribute('name', node.getAttribute('value'));\n                } else {\n                    child.setAttribute('name', node.innerText.trim());\n                }\n                if (!((this.horizontal === '') || (this.horizontal))) {\n                    child.style.display = 'block';\n                }\n                child.innerHTML = node.innerHTML;\n                this.radioGroup.appendChild(child);\n                this.choiceItems.push(child);\n            }\n        }\n    }\n\n    get html() {\n        return html`<paper-radio-group id='radioGroup'></paper-radio-group>`;\n    }\n\n    get css() {\n        return ``;\n    }\n\n}\n\n\nBaseElement.registerAAElement('aa-multiple-choice', AAMultipleChoice);","import BaseElement from './../aa-baseElement/baseElement.js';\n\n\nexport default class AAScreen extends BaseElement {\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:true\n            },\n            \"submit-button-text\":{\n                type:String,\n                value:\"submit\",\n                userDefined:true\n            },\n\n            \"submit-button-hidden\":{\n                type:Boolean,\n                value:false,\n                userDefined:true\n            }\n        }\n    }\n\n    static get acceptsElements(){\n        return null;\n    }\n    static get observedAttributes() {\n        return Object.keys(AAScreen.properties);\n    }\n\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        switch (name) {\n            case 'submit-button-text':\n                if (this.submitButton) { this.submitButton.innerHTML = newValue; }\n                break;\n            case 'submit-button-hidden':\n                if ((newValue !== true) || (newValue !== 'true')) {\n                    this.root.querySelector('.submitButtonContainer').style.display = 'block';\n                } else {\n                    this.root.querySelector('.submitButtonContainer').style.display = 'none';\n                }\n                break;\n        }\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.root.innerHTML = this.css + this.html;\n        this.submitButton = this.root.querySelector('.submitButton');\n\n        if (this._started) { return; }\n        this._started = true;\n\n        if (this.submitButtonHidden) {\n            this.root.querySelector('.submitButtonContainer').style.display = 'none';\n        }\n\n\n        this.root.querySelector('.submitButton').addEventListener('click', this.submitButtonClick.bind(this));\n\n    }\n\n\n    get css() {\n\n        return html`<style>\n                :host {\n                    display: block;\n                    height: fit-content;\n                    padding:20px;\n                    font-family:sans-serif;\n                }\n\n                .submitButtonContainer{\n                    text-align:right;\n                    justify-content: space-between; \n                    align-items:center;\n                    padding:20px;\n                }\n\n\n                paper-button.darkBlue {\n                    background-color: #0d47a1;\n                    color: white;\n                 }\n  \n         </style>`;\n    }\n\n    get html() {\n        return html`\n            <slot></slot>\n            <div id='userMessage'>\n            <div class='submitButtonContainer'>\n                <div>\n                    ${this.getSubmitButton()}\n            </div>\n                <div id='userMessage'></div>\n            </div>`;\n    }\n\n    getSubmitButton() {\n        let buttonText = this.submitButtonText || 'submit';\n        if (customElements.get('paper-button')) {\n            return html`<paper-button class='submitButton darkBlue' raised class='indigo'>${buttonText}</paper-button>`;\n        } else {\n            return html`<button class='submitButton'>${buttonText}</button>`;\n        }\n    }\n\n    submitButtonClick(e) {\n\n        let userMessage = this.querySelector('#userMessage');\n        if (this.hasChildrenThatDemandResponse()) {\n\n            userMessage.innerHTML = html`\n                    <div style='display:flex; align-items:center'> \n                        <div>please fill out the required fields</div> \n                            <div id='attention' style='color: red; font-size: 20px;  border: solid thin; border-radius: 50%; width: 20px;\n                                                margin-left:20px; height: 20px; \n                                                text-align: center;\n                                                padding: 5px;'>!</div></div>`;\n            return;\n        }\n\n        let valueSubmitEvent = new CustomEvent('valueSubmit', { bubbles: true, detail: { value: this.getValue() } });\n        this.dispatchEvent(valueSubmitEvent);\n        this._dispatchEndEvent(this.getValue());\n        if (typeof e.detail.callback != 'undefined') {\n            e.detail.callback(e);\n        }\n        if (this.dontHide === false) { this.hide(); }\n\n    }\n\n\n\n\n\n\n    hasChildrenThatDemandResponse() {\n\n        let aaChildren = this.getAAChildren(this);\n        let isMissingValues = false;\n        for (let i = 0; i < aaChildren.length; i++) {\n            if (aaChildren[i].mandatory) {\n                if (child.getValue() === null) {\n                    // console.log(child, 'demands response');\n                    // TODO : add a class to the child\n                    isMissingValues = true;\n                }\n            }\n        }\n\n        return isMissingValues;\n    }\n\n    getAAChildren() {\n        let result = [];\n        for (let i = 0; i < this.children.length; i++) {\n            if (BaseElement.isAAElement(this.children[i])) { result.push(this.children[i]); }\n        }\n        return result;\n    }\n\n\n\n    getChildrenValues() {\n        let result = [];\n\n        for (let i = 0; i < this.children.length; i++) {\n            let c = this.children[i];\n            if (c.getValue) {\n                result.push(c.getValue());\n            } else {\n                if (c.value) {\n                    result.push({ [c.name]: c.value });\n                }\n            }\n        }\n        return result;\n    }\n\n\n\n\n\n    getValue() {\n        let __meta = {\n            attachedTimestamp: this.attachedTimestamp,\n            submitTimestamp: new Date().getTime()\n        };\n        let result = this.getChildrenValues(this);\n        return result;\n    }\n\n    getValueWithKey() {\n        let result = {};\n        result[this.name] = this.getValue();\n        return result;\n    }\n\n\n    automate() {\n        for (let i = 0; i < this.children.length; i++) {\n            if (BaseElement.isAAElement(this.children[i])) {\n                if (typeof this.children[i].automate != 'undefined') {\n                    this.children[i].automate();\n                }\n            }\n        }\n        this.submitButtonClick();\n    }\n\n    hide() {\n        this.style.display = 'none';\n    }\n\n    show() {\n        this.style.display = 'block';\n    }\n}\n\nBaseElement.registerAAElement('aa-screen', AAScreen);\n\n","import BaseElement from '../../aa-baseElement/baseElement.js';\n\nexport default class AAJump extends BaseElement {\n\n\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:true\n            },\n            \"goto\":{\n                type:String,\n                userDefined:true\n            }\n        }\n    }\n\n    static get acceptsElements(){\n        return []\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AAJump.properties);\n    }\n\n    connectedCallback() {\n        this._dispatchEndEvent({ goto: this.goto, autoDispatch: true });\n        this.remove();\n    }\n}\n\nBaseElement.registerAAElement('aa-jump', AAJump);\n","import BaseElement from './../aa-baseElement/baseElement.js';\nimport './aa-jump/aa-jump.js';\n\n\n\nexport default class AASequence extends BaseElement {\n\n    static get properties() {\n        return {\n            name: {\n                type: String,\n                userDefined: true\n            },\n            'write-into': {\n                type: String,\n                userDefined: true\n            },\n\n            'should-run':{\n                type:Boolean,\n                userDefined:true\n            },\n\n            'debug': {\n                type: Boolean,\n                value: false,\n                userDefined: false\n            },\n            'type':{\n                type:String, //there should be an array of options type\n                userDefined: false\n            },\n            'stopped':{\n                type:Boolean,\n                userDefined:false\n            }\n        }\n    }\n\n    static get acceptsElements(){\n        return null\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AASequence.properties);\n    }\n\n    constructor() {\n        super();\n        // this.root = this.attachShadow({ mode: 'open' });\n        // this.root.innerHTML = '<slot></slot>';\n    }\n    connectedCallback() {\n        this.addEventListener('endEvent', this.endEventListener.bind(this));\n        if ((this.shouldRun === null) || (this.shouldRun === true)) {\n            this.init()\n        };\n    }\n\n\n    get css() {\n        return html`\n            <style>\n                :host {\n                    display: block;\n                }\n            </style>\n        `\n    }\n\n    get html() {\n        return html`\n            <slot></slot>\n            <button id='nextButton' hidden></button>\n        `\n    }\n\n    init() {\n        this.stopped = false;\n        if (this.writeInto) {\n            this.target = document.querySelector(this.writeInto);\n        } else {\n            this.target = this;\n        }\n\n\n\n        if (typeof this.innerFragment === 'undefined') {\n            console.warn('.innerFragment is undefined');\n            this.restoreHeldNodes(this)\n            return;\n        }\n\n\n        this.sIndex = 0;\n        if (!this.stopped) { this.start() }\n    }\n\n    start() {\n        this.stopped = false;\n        this.next();\n    }\n\n    stop() {\n        this.stopped = true;\n    }\n\n\n\n\n    next(name) {\n        return new Promise((resolve, reject) => {\n\n\n            if (this.stopped) { return; }\n            if (this.sIndex >= this.innerFragment.childNodes.length) return null;\n\n            if (typeof name === 'string') {\n                for (let i = 0; i < this.innerFragment.childNodes.length; i++) {\n                    if (this.innerFragment.childNodes[i].getAttribute) if (this.innerFragment.childNodes[i].getAttribute('name') == name) {\n                        this.sIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            let fragmentChild = this.innerFragment.childNodes[this.sIndex];\n            //  if the child is not an element just add it immediately \n            //  and move on to the next, there won't be a connectecCallback Function to execute anyway\n            while (fragmentChild.nodeType != Node.ELEMENT_NODE) {\n\n                let fragmentChildCopy = BaseElement.copy(fragmentChild);\n                this.target.appendChild(fragmentChildCopy);\n                this.currentNode = fragmentChildCopy;\n                this.sIndex++;\n                if (this.sIndex >= this.innerFragment.childNodes.length) { return; }\n                fragmentChild = this.innerFragment.childNodes[this.sIndex];\n            }\n            let fragmentChildCopy = BaseElement.copy(fragmentChild);\n            this.currentNode = fragmentChildCopy;\n            this.sIndex += 1;\n            if (!fragmentChildCopy._dispatchEndEvent) {\n                resolve(this.next());\n            } else {\n                this.target.appendChild(fragmentChildCopy);\n                setTimeout(() => resolve());\n            }\n        })\n    }\n\n    endEventListener(e) {\n        e.stopPropagation();\n        if (e.detail) {\n            if (e.detail.goto) { this.next(e.detail.goto); }\n            else if (e.detail.autoDispatch) { this.next(true); }\n            else { setTimeout(() => this.next(true)); }\n        } else {\n            setTimeout(() => this.next(true))\n        }\n    }\n}\n\nBaseElement.registerAAElement('aa-sequence', AASequence);\n\n\n","import BaseElement from './../aa-baseElement/baseElement.js'\n\nimport  './../aa-memory/aa-memory.js'\n\nexport default class AASession extends BaseElement {\n\n    static get properties(){\n        return {\n            name:{\n                type:String,\n                userDefined:true\n            },\n            'should-run':{\n                type:Boolean,\n                userDefined:true\n            },\n\n            'debug': {\n                type: Boolean,\n                value: false,\n                userDefined: false\n            },\n\n        }\n    }\n\n    static get acceptsElements(){\n        return null\n    }\n\n    static get observedAttributes() {\n      return Object.keys(AASession.properties);\n    }\n\n\n\n    constructor() {\n        super();\n        \n\n        this.myTemplate = document.createElement('template');\n        this.myTemplate.innerHTML = this.innerHTML;\n        this.innerHTML = '';\n\n        // this.root = this.attachShadow({ mode: 'closed' });\n        // this.root.innerHTML = '<template><slot></slot></template>'\n        this._mem = document.createElement('aa-memory');\n        this.addEventListener('valueSubmit', (e) => {\n\n\n            // e.stopPropagation();\n            let input = {\n                data: e.detail.value,\n                sessionID: this.sessionID,\n                sessionTimestamp: this.sessionTime,\n                sessionName: this.name,\n                variables: Object.keys(e.detail.value),\n            };\n           // TODO:  this._mem.saveReplyValue(e.detail.value, false);\n\n\n            let inputSubmitEvent = new CustomEvent('inputSubmit', { bubbles: true, detail: { input } });\n            this.dispatchEvent(inputSubmitEvent);\n            //  ema-participant-client needs to catch this and either send it to the server,\n            //  or store it locally if we are offline\n            //  A reason that ema-participant-client needs to do this, is because it cares\n            //  about identification tokens\n\n\n        })\n\n        this.addEventListener('endEvent', (e) => {\n            if(!this.debug) e.stopPropagation();\n            let sessionEndEvent = new CustomEvent('sessionEndEvent', { bubbles: true, detail: 'sessionEnd' });\n            this.dispatchEvent(sessionEndEvent);\n        })\n\n\n    }\n\n    myIdGenerator() {\n\n        return 0;\n    }\n\n    connectedCallback() {\n        // console.log(this.tagName+\"#\"+this.id,\"connected\");\n\n        this.sessionID = this.myIdGenerator();\n        this.sessionTime = new Date().getTime();\n        let sessionDatum = Object.keys(this.dataset);\n        for(let i in sessionDatum){\n            this.setData(sessionDatum[i], this.dataset[sessionDatum[i]]);\n        }\n        if ((this.shouldRun === null) || (this.shouldRun === true)) {\n            this.run();\n        }\n    }\n\n\n    attachTemplateChildNodesToMyself(templateClone){\n        \n        while(templateClone.content.childNodes.length){\n            //  if there's a direct template child, we want its children appended too\n            if(templateClone.content.childNodes[0].nodeName===\"TEMPLATE\"){\n                while(templateClone.content.childNodes[0].content.childNodes.length){\n                    this.appendChild(templateClone.content.childNodes[0].content.childNodes[0]);\n                }\n                //  we are not appending the template element elsewhere \n                //  so throw it way so that the childnode count can be reduced\n                templateClone.content.childNodes[0].remove();\n            }else{\n                this.appendChild(templateClone.content.childNodes[0]);\n            }\n        }\n    }\n\n    run() {\n\n        let myTemplateClone = this.myTemplate.cloneNode(true);\n        BaseElement.scanAndReplace(myTemplateClone);   \n        this.attachTemplateChildNodesToMyself(myTemplateClone);\n    }\n\n    getData(name){\n        return this._mem.getData(name);\n    }\n    setData(name, value){\n        return this._mem.setData(name, value);\n    }\n\n    getDataDump(){\n        return this._mem.dataset;\n    }\n\n}\n\nBaseElement.registerAAElement('aa-session', AASession);\n\n\n\n\n\n\n\n","import BaseElement from '../aa-baseElement/baseElement.js';\nexport default class AATextAnswer extends BaseElement {\n\n\n\n    static get properties() {\n        return {\n            name: {\n                type: String,\n                userDefined: true\n            },\n            'long': {\n                type: Boolean,\n                userDefined: true\n            },\n            label: {\n                type: String,\n                userDefined: true\n            },\n            'value': {\n                type: String,\n                userDefined: false\n            },\n\n        }\n    }\n\n    static get acceptsElements() {\n        return null\n    }\n\n    static get observedAttributes() {\n        return Object.keys(AATextAnswer.properties);\n    }\n\n\n    changeInputItem(type) {\n        if (type === 'long') {\n            let value = this.value;\n            let label = this.label;\n            this.inputItem = customElements.get('paper-textarea') ?\n                document.createElement('paper-textarea') : document.createElement('textarea');\n            this.inputItem.value = value;\n            this.inputItem.label = label;\n            this.inputItem.classList.add('inputItem');\n            this.fixBugInPaperTextarea(this.inputItem);\n            this.inputItem.addEventListener('change', (e) => {\n                this.value = e.target.value;\n            })\n            this.root.querySelector('.inputItem').replaceWith(this.inputItem);\n        } else {\n            let value = this.value;\n            let label = this.label;\n            this.inputItem = customElements.get('paper-input') ?\n                document.createElement('paper-input') : document.createElement('input');\n            this.inputItem.value = value;\n            this.inputItem.label = label;\n            this.inputItem.classList.add('inputItem');\n            this.inputItem.addEventListener('change', (e) => {\n                this.value = e.target.value;\n            })\n            this.root.querySelector('.inputItem').replaceWith(this.inputItem);\n        }\n    }\n\n\n    get value() {\n        if (!this.inputItem) {\n            return this.getAttribute('value');\n        }\n        return this.inputItem.value;\n    }\n    set value(val) {\n        this.setAttribute('value', val);\n        if (this.inputItem) {\n            this.inputItem.value = val;\n        }\n\n    }\n\n    get label() {\n        return this.getAttribute('label');\n    }\n\n    set label(val) {\n        this.setAttribute('label', val);\n        if (this.inputItem) {\n            this.inputItem.label = val;\n        }\n    }\n\n    set long(val) {\n        this.setAttribute('long', val);\n        if (val) {\n            this.changeInputItem('long');\n        } else {\n            this.changeInputItem('short');\n        }\n    }\n\n    get long() {\n        return this.getAttribute('long');\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        let html = (this.long || (this.long === '')) ? this.longHtml : this.html;\n\n        this.root.innerHTML = this.css + `<div class='inputContainer'>${html}<div>`;\n\n        let label = this.label;\n        let value = this.value;\n        this.inputItem = this.root.querySelector('.inputItem');\n        if (label) { this.inputItem.label = label; }\n        if (value) { this.inputItem.value = value; }\n        this.fixBugInPaperTextarea(this.inputItem);\n\n        this.inputItem.addEventListener('change', (e) => {\n            this.value = e.target.value;\n        });\n    }\n\n\n    fixBugInPaperTextarea(inputItem) {\n        // solves issue documented here: https://github.com/PolymerElements/paper-input/issues/125\n\n        setTimeout(() => {\n            if (inputItem.tagName === 'PAPER-TEXTAREA') {\n                inputItem.root.childNodes[2].children[1].textarea.style.overflow = 'hidden';\n                let width = window.getComputedStyle(this.root.querySelector('.inputContainer')).width;\n\n                inputItem.root.childNodes[2].style.width = width;\n                inputItem.addEventListener('focus', (e) => {\n                    let width = window.getComputedStyle(this.root.querySelector('.inputContainer')).width;\n                    inputItem.root.childNodes[2].style.width = width;\n                })\n\n                window.addEventListener('resize', () => {\n                    inputItem.root.childNodes[2].style.width = '';\n                    setTimeout(() => {\n                        let width = window.getComputedStyle(this.root.querySelector('.inputContainer')).width;\n                        inputItem.root.childNodes[2].style.width = width;\n                    }, 100);\n\n                })\n            };\n        }, 0);\n\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n\n    }\n\n    get css() {\n        return `<style>\n        :host{\n            display:block;\n            overflow:hidden;        \n        }\n        paper-textarea textarea {\n           overflow:hidden;\n        }\n        </style>`;\n    }\n\n    get html() {\n        let inputElement = customElements.get('paper-input')\n            ? `<paper-input class='inputItem'></paper-input>`\n            : `<input class='inputItem'>`;\n        return html`${inputElement}`\n    }\n    get longHtml() {\n        let inputElement = customElements.get('paper-input')\n            ? `<paper-textarea class='inputItem'></paper-input>`\n            : `<textarea class='inputItem'></textarea`;\n        return html`${inputElement}`\n    }\n\n}\n\nBaseElement.registerAAElement('aa-text-answer', AATextAnswer);","import BaseElement from './../aa-baseElement/baseElement.js'\nexport default class AAVariable extends BaseElement {\n\n    static get properties() {\n        return {\n            name: {\n                type: String,\n                userDefined: true\n            },\n            'value': {\n                type: String,\n                userDefined: true\n            },\n\n        }\n    }\n\n    static get acceptsElements() {\n        return []\n    }\n\n    static get observedAttributes() {\n\n        return Object.keys(AAVariable.properties);\n\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback() {\n        let session = this._getParentSession();\n        session.setData(this.name, this.value);\n        this._dispatchEndEvent({autoDispatch:true});\n        if(!this.debug) {this.remove();}\n    };\n\n\n}\n\nBaseElement.registerAAElement('aa-variable', AAVariable);\n\n","// import '../dist/paper-polymer.js';\nimport BaseElement from './customElements/aa-baseElement/baseElement.js';\nimport AAVariable from './customElements/aa-variable/aa-variable.js';\nimport AAFunctionRandom from './customElements/aa-function/aa-function-random.js';\nimport AAChoose from './customElements/aa-choose/aa-choose.js';\nimport AAWhen from './customElements/aa-choose/aa-when/aa-when.js';\nimport AAOtherwise from './customElements/aa-choose/aa-otherwise/aa-otherwise.js';\nimport AAMemory from './customElements/aa-memory/aa-memory.js';\nimport AAScreen from './customElements/aa-screen/aa-screen.js';\nimport AASequence from './customElements/aa-sequence/aa-sequence.js';\nimport AASession from './customElements/aa-session/aa-session.js';\nimport AATextAnswer from './customElements/aa-text-answer/aa-text-answer.js';\nimport AAMultipleChoice from './customElements/aa-multiple-choice/aa-multiple-choice.js';\nimport AAChoiceItem from './customElements/aa-choice-item/aa-choice-item.js';\nimport AACheckboxes from './customElements/aa-checkboxes/aa-checkboxes.js';\nimport AALikertScale from './customElements/aa-likert-scale/aa-likert-scale.js';\n// debugger;\n\n\nexport  {BaseElement, AAVariable, AAFunctionRandom, \n    AAChoose,  AAWhen, AAOtherwise, AAMemory, AAScreen, \n    AASequence, AASession, AATextAnswer,\n    AAChoiceItem, AAMultipleChoice, AACheckboxes  }","/**\r\n * this is a modified version of the original jsep \r\n * which if the root parameter is undefined,\r\n * the jsep object returned so as to be exported   \r\n **/ \r\n\r\n\r\n//     JavaScript Expression Parser (JSEP) 0.3.4\r\n//     JSEP may be freely distributed under the MIT License\r\n//     http://jsep.from.so/\r\n\r\n/*global module: true, exports: true, console: true */\r\nexport default (function (root) {\r\n\t'use strict';\r\n\t// Node Types\r\n\t// ----------\r\n\t\r\n\t// This is the full set of types that any JSEP node can be.\r\n\t// Store them here to save space when minified\r\n\tvar COMPOUND = 'Compound',\r\n\t\tIDENTIFIER = 'Identifier',\r\n\t\tMEMBER_EXP = 'MemberExpression',\r\n\t\tLITERAL = 'Literal',\r\n\t\tTHIS_EXP = 'ThisExpression',\r\n\t\tCALL_EXP = 'CallExpression',\r\n\t\tUNARY_EXP = 'UnaryExpression',\r\n\t\tBINARY_EXP = 'BinaryExpression',\r\n\t\tLOGICAL_EXP = 'LogicalExpression',\r\n\t\tCONDITIONAL_EXP = 'ConditionalExpression',\r\n\t\tARRAY_EXP = 'ArrayExpression',\r\n\r\n\t\tPERIOD_CODE = 46, // '.'\r\n\t\tCOMMA_CODE  = 44, // ','\r\n\t\tSQUOTE_CODE = 39, // single quote\r\n\t\tDQUOTE_CODE = 34, // double quotes\r\n\t\tOPAREN_CODE = 40, // (\r\n\t\tCPAREN_CODE = 41, // )\r\n\t\tOBRACK_CODE = 91, // [\r\n\t\tCBRACK_CODE = 93, // ]\r\n\t\tQUMARK_CODE = 63, // ?\r\n\t\tSEMCOL_CODE = 59, // ;\r\n\t\tCOLON_CODE  = 58, // :\r\n\r\n\t\tthrowError = function(message, index) {\r\n\t\t\tvar error = new Error(message + ' at character ' + index);\r\n\t\t\terror.index = index;\r\n\t\t\terror.description = message;\r\n\t\t\tthrow error;\r\n\t\t},\r\n\r\n\t// Operations\r\n\t// ----------\r\n\r\n\t// Set `t` to `true` to save space (when minified, not gzipped)\r\n\t\tt = true,\r\n\t// Use a quickly-accessible map to store all of the unary operators\r\n\t// Values are set to `true` (it really doesn't matter)\r\n\t\tunary_ops = {'-': t, '!': t, '~': t, '+': t},\r\n\t// Also use a map for the binary operations but set their values to their\r\n\t// binary precedence for quick reference:\r\n\t// see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\r\n\t\tbinary_ops = {\r\n\t\t\t'||': 1, '&&': 2, '|': 3,  '^': 4,  '&': 5,\r\n\t\t\t'==': 6, '!=': 6, '===': 6, '!==': 6,\r\n\t\t\t'<': 7,  '>': 7,  '<=': 7,  '>=': 7,\r\n\t\t\t'<<':8,  '>>': 8, '>>>': 8,\r\n\t\t\t'+': 9, '-': 9,\r\n\t\t\t'*': 10, '/': 10, '%': 10\r\n\t\t},\r\n\t// Get return the longest key length of any object\r\n\t\tgetMaxKeyLen = function(obj) {\r\n\t\t\tvar max_len = 0, len;\r\n\t\t\tfor(var key in obj) {\r\n\t\t\t\tif((len = key.length) > max_len && obj.hasOwnProperty(key)) {\r\n\t\t\t\t\tmax_len = len;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn max_len;\r\n\t\t},\r\n\t\tmax_unop_len = getMaxKeyLen(unary_ops),\r\n\t\tmax_binop_len = getMaxKeyLen(binary_ops),\r\n\t// Literals\r\n\t// ----------\r\n\t// Store the values to return for the various literals we may encounter\r\n\t\tliterals = {\r\n\t\t\t'true': true,\r\n\t\t\t'false': false,\r\n\t\t\t'null': null\r\n\t\t},\r\n\t// Except for `this`, which is special. This could be changed to something like `'self'` as well\r\n\t\tthis_str = 'this',\r\n\t// Returns the precedence of a binary operator or `0` if it isn't a binary operator\r\n\t\tbinaryPrecedence = function(op_val) {\r\n\t\t\treturn binary_ops[op_val] || 0;\r\n\t\t},\r\n\t// Utility function (gets called from multiple places)\r\n\t// Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\r\n\t\tcreateBinaryExpression = function (operator, left, right) {\r\n\t\t\tvar type = (operator === '||' || operator === '&&') ? LOGICAL_EXP : BINARY_EXP;\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\toperator: operator,\r\n\t\t\t\tleft: left,\r\n\t\t\t\tright: right\r\n\t\t\t};\r\n\t\t},\r\n\t\t// `ch` is a character code in the next three functions\r\n\t\tisDecimalDigit = function(ch) {\r\n\t\t\treturn (ch >= 48 && ch <= 57); // 0...9\r\n\t\t},\r\n\t\tisIdentifierStart = function(ch) {\r\n\t\t\treturn (ch === 36) || (ch === 95) || // `$` and `_`\r\n\t\t\t\t\t(ch >= 65 && ch <= 90) || // A...Z\r\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\r\n                    (ch >= 128 && !binary_ops[String.fromCharCode(ch)]); // any non-ASCII that is not an operator\r\n\t\t},\r\n\t\tisIdentifierPart = function(ch) {\r\n\t\t\treturn (ch === 36) || (ch === 95) || // `$` and `_`\r\n\t\t\t\t\t(ch >= 65 && ch <= 90) || // A...Z\r\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\r\n\t\t\t\t\t(ch >= 48 && ch <= 57) || // 0...9\r\n                    (ch >= 128 && !binary_ops[String.fromCharCode(ch)]); // any non-ASCII that is not an operator\r\n\t\t},\r\n\r\n\t\t// Parsing\r\n\t\t// -------\r\n\t\t// `expr` is a string with the passed in expression\r\n\t\tjsep = function(expr) {\r\n\t\t\t// `index` stores the character number we are currently at while `length` is a constant\r\n\t\t\t// All of the gobbles below will modify `index` as we move along\r\n\t\t\tvar index = 0,\r\n\t\t\t\tcharAtFunc = expr.charAt,\r\n\t\t\t\tcharCodeAtFunc = expr.charCodeAt,\r\n\t\t\t\texprI = function(i) { return charAtFunc.call(expr, i); },\r\n\t\t\t\texprICode = function(i) { return charCodeAtFunc.call(expr, i); },\r\n\t\t\t\tlength = expr.length,\r\n\r\n\t\t\t\t// Push `index` up to the next non-space character\r\n\t\t\t\tgobbleSpaces = function() {\r\n\t\t\t\t\tvar ch = exprICode(index);\r\n\t\t\t\t\t// space or tab\r\n\t\t\t\t\twhile(ch === 32 || ch === 9 || ch === 10 || ch === 13) {\r\n\t\t\t\t\t\tch = exprICode(++index);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// The main parsing function. Much of this code is dedicated to ternary expressions\r\n\t\t\t\tgobbleExpression = function() {\r\n\t\t\t\t\tvar test = gobbleBinaryExpression(),\r\n\t\t\t\t\t\tconsequent, alternate;\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tif(exprICode(index) === QUMARK_CODE) {\r\n\t\t\t\t\t\t// Ternary expression: test ? consequent : alternate\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tconsequent = gobbleExpression();\r\n\t\t\t\t\t\tif(!consequent) {\r\n\t\t\t\t\t\t\tthrowError('Expected expression', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tif(exprICode(index) === COLON_CODE) {\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\talternate = gobbleExpression();\r\n\t\t\t\t\t\t\tif(!alternate) {\r\n\t\t\t\t\t\t\t\tthrowError('Expected expression', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: CONDITIONAL_EXP,\r\n\t\t\t\t\t\t\t\ttest: test,\r\n\t\t\t\t\t\t\t\tconsequent: consequent,\r\n\t\t\t\t\t\t\t\talternate: alternate\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrowError('Expected :', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Search for the operation portion of the string (e.g. `+`, `===`)\r\n\t\t\t\t// Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\r\n\t\t\t\t// and move down from 3 to 2 to 1 character until a matching binary operation is found\r\n\t\t\t\t// then, return that binary operation\r\n\t\t\t\tgobbleBinaryOp = function() {\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tvar  to_check = expr.substr(index, max_binop_len), tc_len = to_check.length;\r\n\t\t\t\t\twhile(tc_len > 0) {\r\n\t\t\t\t\t\t// Don't accept a binary op when it is an identifier.\r\n\t\t\t\t\t\t// Binary ops that start with a identifier-valid character must be followed\r\n\t\t\t\t\t\t// by a non identifier-part valid character\r\n\t\t\t\t\t\tif(binary_ops.hasOwnProperty(to_check) && (\r\n\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\r\n\t\t\t\t\t\t\t(index+to_check.length< expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\r\n\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\tindex += tc_len;\r\n\t\t\t\t\t\t\treturn to_check;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// This function is responsible for gobbling an individual expression,\r\n\t\t\t\t// e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\r\n\t\t\t\tgobbleBinaryExpression = function() {\r\n\t\t\t\t\tvar node, biop, prec, stack, biop_info, left, right, i;\r\n\r\n\t\t\t\t\t// First, try to get the leftmost thing\r\n\t\t\t\t\t// Then, check to see if there's a binary operator operating on that leftmost thing\r\n\t\t\t\t\tleft = gobbleToken();\r\n\t\t\t\t\tbiop = gobbleBinaryOp();\r\n\r\n\t\t\t\t\t// If there wasn't a binary operator, just return the leftmost node\r\n\t\t\t\t\tif(!biop) {\r\n\t\t\t\t\t\treturn left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise, we need to start a stack to properly place the binary operations in their\r\n\t\t\t\t\t// precedence structure\r\n\t\t\t\t\tbiop_info = { value: biop, prec: binaryPrecedence(biop)};\r\n\r\n\t\t\t\t\tright = gobbleToken();\r\n\t\t\t\t\tif(!right) {\r\n\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack = [left, biop_info, right];\r\n\r\n\t\t\t\t\t// Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\r\n\t\t\t\t\twhile((biop = gobbleBinaryOp())) {\r\n\t\t\t\t\t\tprec = binaryPrecedence(biop);\r\n\r\n\t\t\t\t\t\tif(prec === 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbiop_info = { value: biop, prec: prec };\r\n\r\n\t\t\t\t\t\t// Reduce: make a binary expression from the three topmost entries.\r\n\t\t\t\t\t\twhile ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\r\n\t\t\t\t\t\t\tright = stack.pop();\r\n\t\t\t\t\t\t\tbiop = stack.pop().value;\r\n\t\t\t\t\t\t\tleft = stack.pop();\r\n\t\t\t\t\t\t\tnode = createBinaryExpression(biop, left, right);\r\n\t\t\t\t\t\t\tstack.push(node);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnode = gobbleToken();\r\n\t\t\t\t\t\tif(!node) {\r\n\t\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstack.push(biop_info, node);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti = stack.length - 1;\r\n\t\t\t\t\tnode = stack[i];\r\n\t\t\t\t\twhile(i > 1) {\r\n\t\t\t\t\t\tnode = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\r\n\t\t\t\t\t\ti -= 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// An individual part of a binary expression:\r\n\t\t\t\t// e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\r\n\t\t\t\tgobbleToken = function() {\r\n\t\t\t\t\tvar ch, to_check, tc_len;\r\n\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tch = exprICode(index);\r\n\r\n\t\t\t\t\tif(isDecimalDigit(ch) || ch === PERIOD_CODE) {\r\n\t\t\t\t\t\t// Char code 46 is a dot `.` which can start off a numeric literal\r\n\t\t\t\t\t\treturn gobbleNumericLiteral();\r\n\t\t\t\t\t} else if(ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\r\n\t\t\t\t\t\t// Single or double quotes\r\n\t\t\t\t\t\treturn gobbleStringLiteral();\r\n\t\t\t\t\t} else if (ch === OBRACK_CODE) {\r\n\t\t\t\t\t\treturn gobbleArray();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tto_check = expr.substr(index, max_unop_len);\r\n\t\t\t\t\t\ttc_len = to_check.length;\r\n\t\t\t\t\t\twhile(tc_len > 0) {\r\n\t\t\t\t\t\t// Don't accept an unary op when it is an identifier.\r\n\t\t\t\t\t\t// Unary ops that start with a identifier-valid character must be followed\r\n\t\t\t\t\t\t// by a non identifier-part valid character\r\n\t\t\t\t\t\t\tif(unary_ops.hasOwnProperty(to_check) && (\r\n\t\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\r\n\t\t\t\t\t\t\t\t(index+to_check.length < expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\r\n\t\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\t\tindex += tc_len;\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttype: UNARY_EXP,\r\n\t\t\t\t\t\t\t\t\toperator: to_check,\r\n\t\t\t\t\t\t\t\t\targument: gobbleToken(),\r\n\t\t\t\t\t\t\t\t\tprefix: true\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (isIdentifierStart(ch) || ch === OPAREN_CODE) { // open parenthesis\r\n\t\t\t\t\t\t\t// `foo`, `bar.baz`\r\n\t\t\t\t\t\t\treturn gobbleVariable();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\t// Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\r\n\t\t\t\t// keep track of everything in the numeric literal and then calling `parseFloat` on that string\r\n\t\t\t\tgobbleNumericLiteral = function() {\r\n\t\t\t\t\tvar number = '', ch, chCode;\r\n\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(exprICode(index) === PERIOD_CODE) { // can start with a decimal marker\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\r\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tch = exprI(index);\r\n\t\t\t\t\tif(ch === 'e' || ch === 'E') { // exponent marker\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\tch = exprI(index);\r\n\t\t\t\t\t\tif(ch === '+' || ch === '-') { // exponent sign\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) { //exponent itself\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!isDecimalDigit(exprICode(index-1)) ) {\r\n\t\t\t\t\t\t\tthrowError('Expected exponent (' + number + exprI(index) + ')', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tchCode = exprICode(index);\r\n\t\t\t\t\t// Check to make sure this isn't a variable name that start with a number (123abc)\r\n\t\t\t\t\tif(isIdentifierStart(chCode)) {\r\n\t\t\t\t\t\tthrowError('Variable names cannot start with a number (' +\r\n\t\t\t\t\t\t\t\t\tnumber + exprI(index) + ')', index);\r\n\t\t\t\t\t} else if(chCode === PERIOD_CODE) {\r\n\t\t\t\t\t\tthrowError('Unexpected period', index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\tvalue: parseFloat(number),\r\n\t\t\t\t\t\traw: number\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Parses a string literal, staring with single or double quotes with basic support for escape codes\r\n\t\t\t\t// e.g. `\"hello world\"`, `'this is\\nJSEP'`\r\n\t\t\t\tgobbleStringLiteral = function() {\r\n\t\t\t\t\tvar str = '', quote = exprI(index++), closed = false, ch;\r\n\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tch = exprI(index++);\r\n\t\t\t\t\t\tif(ch === quote) {\r\n\t\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if(ch === '\\\\') {\r\n\t\t\t\t\t\t\t// Check for all of the common escape codes\r\n\t\t\t\t\t\t\tch = exprI(index++);\r\n\t\t\t\t\t\t\tswitch(ch) {\r\n\t\t\t\t\t\t\t\tcase 'n': str += '\\n'; break;\r\n\t\t\t\t\t\t\t\tcase 'r': str += '\\r'; break;\r\n\t\t\t\t\t\t\t\tcase 't': str += '\\t'; break;\r\n\t\t\t\t\t\t\t\tcase 'b': str += '\\b'; break;\r\n\t\t\t\t\t\t\t\tcase 'f': str += '\\f'; break;\r\n\t\t\t\t\t\t\t\tcase 'v': str += '\\x0B'; break;\r\n\t\t\t\t\t\t\t\tdefault : str += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!closed) {\r\n\t\t\t\t\t\tthrowError('Unclosed quote after \"'+str+'\"', index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\tvalue: str,\r\n\t\t\t\t\t\traw: quote + str + quote\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobbles only identifiers\r\n\t\t\t\t// e.g.: `foo`, `_value`, `$x1`\r\n\t\t\t\t// Also, this function checks if that identifier is a literal:\r\n\t\t\t\t// (e.g. `true`, `false`, `null`) or `this`\r\n\t\t\t\tgobbleIdentifier = function() {\r\n\t\t\t\t\tvar ch = exprICode(index), start = index, identifier;\r\n\r\n\t\t\t\t\tif(isIdentifierStart(ch)) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrowError('Unexpected ' + exprI(index), index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tch = exprICode(index);\r\n\t\t\t\t\t\tif(isIdentifierPart(ch)) {\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tidentifier = expr.slice(start, index);\r\n\r\n\t\t\t\t\tif(literals.hasOwnProperty(identifier)) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\t\tvalue: literals[identifier],\r\n\t\t\t\t\t\t\traw: identifier\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else if(identifier === this_str) {\r\n\t\t\t\t\t\treturn { type: THIS_EXP };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: IDENTIFIER,\r\n\t\t\t\t\t\t\tname: identifier\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobbles a list of arguments within the context of a function call\r\n\t\t\t\t// or array literal. This function also assumes that the opening character\r\n\t\t\t\t// `(` or `[` has already been gobbled, and gobbles expressions and commas\r\n\t\t\t\t// until the terminator character `)` or `]` is encountered.\r\n\t\t\t\t// e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\r\n\t\t\t\tgobbleArguments = function(termination) {\r\n\t\t\t\t\tvar ch_i, args = [], node, closed = false;\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t\tif(ch_i === termination) { // done parsing\r\n\t\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (ch_i === COMMA_CODE) { // between expressions\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnode = gobbleExpression();\r\n\t\t\t\t\t\t\tif(!node || node.type === COMPOUND) {\r\n\t\t\t\t\t\t\t\tthrowError('Expected comma', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\targs.push(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!closed) {\r\n\t\t\t\t\t\tthrowError('Expected ' + String.fromCharCode(termination), index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn args;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobble a non-literal variable name. This variable name may include properties\r\n\t\t\t\t// e.g. `foo`, `bar.baz`, `foo['bar'].baz`\r\n\t\t\t\t// It also gobbles function calls:\r\n\t\t\t\t// e.g. `Math.acos(obj.angle)`\r\n\t\t\t\tgobbleVariable = function() {\r\n\t\t\t\t\tvar ch_i, node;\r\n\t\t\t\t\tch_i = exprICode(index);\r\n\r\n\t\t\t\t\tif(ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\tnode = gobbleGroup();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode = gobbleIdentifier();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\twhile(ch_i === PERIOD_CODE || ch_i === OBRACK_CODE || ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tif(ch_i === PERIOD_CODE) {\r\n\t\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\r\n\t\t\t\t\t\t\t\tcomputed: false,\r\n\t\t\t\t\t\t\t\tobject: node,\r\n\t\t\t\t\t\t\t\tproperty: gobbleIdentifier()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else if(ch_i === OBRACK_CODE) {\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\r\n\t\t\t\t\t\t\t\tcomputed: true,\r\n\t\t\t\t\t\t\t\tobject: node,\r\n\t\t\t\t\t\t\t\tproperty: gobbleExpression()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t\t\tif(ch_i !== CBRACK_CODE) {\r\n\t\t\t\t\t\t\t\tthrowError('Unclosed [', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else if(ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\t\t// A function call is being made; gobble all the arguments\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: CALL_EXP,\r\n\t\t\t\t\t\t\t\t'arguments': gobbleArguments(CPAREN_CODE),\r\n\t\t\t\t\t\t\t\tcallee: node\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Responsible for parsing a group of things within parentheses `()`\r\n\t\t\t\t// This function assumes that it needs to gobble the opening parenthesis\r\n\t\t\t\t// and then tries to gobble everything within that parenthesis, assuming\r\n\t\t\t\t// that the next thing it should see is the close parenthesis. If not,\r\n\t\t\t\t// then the expression probably doesn't have a `)`\r\n\t\t\t\tgobbleGroup = function() {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tvar node = gobbleExpression();\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tif(exprICode(index) === CPAREN_CODE) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\treturn node;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrowError('Unclosed (', index);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Responsible for parsing Array literals `[1, 2, 3]`\r\n\t\t\t\t// This function assumes that it needs to gobble the opening bracket\r\n\t\t\t\t// and then tries to gobble the expressions as arguments.\r\n\t\t\t\tgobbleArray = function() {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: ARRAY_EXP,\r\n\t\t\t\t\t\telements: gobbleArguments(CBRACK_CODE)\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\tnodes = [], ch_i, node;\r\n\r\n\t\t\twhile(index < length) {\r\n\t\t\t\tch_i = exprICode(index);\r\n\r\n\t\t\t\t// Expressions can be separated by semicolons, commas, or just inferred without any\r\n\t\t\t\t// separators\r\n\t\t\t\tif(ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\r\n\t\t\t\t\tindex++; // ignore separators\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Try to gobble each expression individually\r\n\t\t\t\t\tif((node = gobbleExpression())) {\r\n\t\t\t\t\t\tnodes.push(node);\r\n\t\t\t\t\t// If we weren't able to find a binary expression and are out of room, then\r\n\t\t\t\t\t// the expression passed in probably has too much\r\n\t\t\t\t\t} else if(index < length) {\r\n\t\t\t\t\t\tthrowError('Unexpected \"' + exprI(index) + '\"', index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If there's only one expression just try returning the expression\r\n\t\t\tif(nodes.length === 1) {\r\n\t\t\t\treturn nodes[0];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: COMPOUND,\r\n\t\t\t\t\tbody: nodes\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t// To be filled in by the template\r\n\tjsep.version = '0.3.4';\r\n\tjsep.toString = function() { return 'JavaScript Expression Parser (JSEP) v' + jsep.version; };\r\n\r\n\t/**\r\n\t * @method jsep.addUnaryOp\r\n\t * @param {string} op_name The name of the unary op to add\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addUnaryOp = function(op_name) {\r\n\t\tmax_unop_len = Math.max(op_name.length, max_unop_len);\r\n\t\tunary_ops[op_name] = t; return this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.addBinaryOp\r\n\t * @param {string} op_name The name of the binary op to add\r\n\t * @param {number} precedence The precedence of the binary op (can be a float)\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addBinaryOp = function(op_name, precedence) {\r\n\t\tmax_binop_len = Math.max(op_name.length, max_binop_len);\r\n\t\tbinary_ops[op_name] = precedence;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.addLiteral\r\n\t * @param {string} literal_name The name of the literal to add\r\n\t * @param {*} literal_value The value of the literal\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addLiteral = function(literal_name, literal_value) {\r\n\t\tliterals[literal_name] = literal_value;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeUnaryOp\r\n\t * @param {string} op_name The name of the unary op to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeUnaryOp = function(op_name) {\r\n\t\tdelete unary_ops[op_name];\r\n\t\tif(op_name.length === max_unop_len) {\r\n\t\t\tmax_unop_len = getMaxKeyLen(unary_ops);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllUnaryOps\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllUnaryOps = function() {\r\n\t\tunary_ops = {};\r\n\t\tmax_unop_len = 0;\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeBinaryOp\r\n\t * @param {string} op_name The name of the binary op to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeBinaryOp = function(op_name) {\r\n\t\tdelete binary_ops[op_name];\r\n\t\tif(op_name.length === max_binop_len) {\r\n\t\t\tmax_binop_len = getMaxKeyLen(binary_ops);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllBinaryOps\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllBinaryOps = function() {\r\n\t\tbinary_ops = {};\r\n\t\tmax_binop_len = 0;\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeLiteral\r\n\t * @param {string} literal_name The name of the literal to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeLiteral = function(literal_name) {\r\n\t\tdelete literals[literal_name];\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllLiterals\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllLiterals = function() {\r\n\t\tliterals = {};\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t// In desktop environments, have a way to restore the old value for `jsep`\r\n\tif (typeof exports === 'undefined') {\r\n\r\n\t\tif(!root){\r\n\t\t\treturn  jsep;\r\n\t\t}\r\n\t\tvar old_jsep = root.jsep;\r\n\t\t// The star of the show! It's a function!\r\n\t\troot.jsep = jsep;\r\n\t\t// And a courteous function willing to move out of the way for other similarly-named objects!\r\n\t\tjsep.noConflict = function() {\r\n\t\t\tif(root.jsep === jsep) {\r\n\t\t\t\troot.jsep = old_jsep;\r\n\t\t\t}\r\n\t\t\treturn jsep;\r\n\t\t};\r\n\t} else {\r\n\t\t// In Node.JS environments\r\n\t\tif (typeof module !== 'undefined' && module.exports) {\r\n\t\t\texports = module.exports = jsep;\r\n\t\t} else {\r\n\t\t\texports.parse = jsep;\r\n\t\t}\r\n\t}\r\n}(this));\r\n"],"sourceRoot":""}