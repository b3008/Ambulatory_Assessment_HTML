{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/customElements/aa-baseElement/baseElement.js","webpack:///./src/lib/jsep/jsep.js","webpack:///./src/customElements/aa-choose/aa-choose.js","webpack:///./src/customElements/aa-choose/aa-when/aa-when.js","webpack:///./src/customElements/aa-choose/aa-otherwise/aa-otherwise.js","webpack:///(webpack)/buildin/harmony-module.js","webpack:///./src/customElements/aa-variable/aa-variable.js","webpack:///./src/customElements/aa-function/aa-function-random.js","webpack:///./src/customElements/aa-memory/aa-memory.js","webpack:///./src/customElements/aa-screen/aa-screen.js","webpack:///./src/customElements/aa-sequence/aa-jump/aa-jump.js","webpack:///./src/customElements/aa-sequence/aa-sequence.js","webpack:///./src/customElements/aa-session/aa-session.js","webpack:///./src/customElements/aa-text-answer/aa-text-answer.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","window","html","txt","val","result","length","BaseElement","HTMLElement","elem","customElements","AANodeNames","push","toUpperCase","define","node","indexOf","nodeName","fragment","document","createDocumentFragment","childNodes","append","cloneNode","innerFragment","createFragmentForNode","scanAndReplace","content","isAAElement","holder","createHolderForNode","replaceWith","super","this","_props","makePropertiesFromAttributes","console","log","tagName","id","_attachedTimestamp","Date","getTime","_debug","debug","appendChild","copy","attr","toLowerCase","observedAttributes","props","prop","toCamelCase","getAttribute","set","setAttribute","str","words","split","substr","letter","nodeCopy","detail","dispatchEvent","CustomEvent","bubbles","_sessionElement","parentNode","throwError","message","index","error","Error","description","unary_ops","binary_ops","getMaxKeyLen","obj","len","max_len","max_unop_len","max_binop_len","literals","binaryPrecedence","op_val","createBinaryExpression","operator","left","right","type","isDecimalDigit","ch","isIdentifierStart","String","fromCharCode","isIdentifierPart","jsep","expr","ch_i","charAtFunc","charAt","charCodeAtFunc","charCodeAt","exprI","exprICode","gobbleSpaces","gobbleExpression","consequent","alternate","test","gobbleBinaryExpression","gobbleBinaryOp","to_check","tc_len","biop","prec","stack","biop_info","gobbleToken","pop","gobbleNumericLiteral","gobbleStringLiteral","gobbleArray","argument","prefix","gobbleVariable","chCode","number","parseFloat","raw","quote","closed","gobbleIdentifier","identifier","start","slice","gobbleArguments","termination","args","gobbleGroup","computed","callee","elements","nodes","body","version","toString","addUnaryOp","op_name","Math","max","addBinaryOp","precedence","addLiteral","literal_name","literal_value","removeUnaryOp","removeAllUnaryOps","removeBinaryOp","removeAllBinaryOps","removeLiteral","removeAllLiterals","root","old_jsep","noConflict","parse","AAChoose","attachShadow","innerHTML","originalContent","_shouldRun","shouldRun","sessionElement","_getParentSession","_getNodeToInstantiate","_dispatchEndEvent","nodesToReturn","nodeOtherwise","isChildTrue","children","child","evaluate","started","myFragmentChildren","fragmentChildrenCounter","finalFragmentChild","currentNode","formerNodes","fragmentChild","isHolder","replaceHolderWithElement","_restoreHeldNodes","element","evaluateTestExpression","replaceExpressionIdentifiersWithValues","parseTree","eval","e","expression","session","originalIdentifiers","keys","getDataDump","upperCaseIdentifiers","map","getData","finalValue","parseInt","RegExp","replace","registerAAElement","AAWhen","connectedCallback","AAOtherwise","originalModule","webpackPolyfill","setData","getValue","autoDispatch","parsedMin","min","parsedMax","getRandomInt","ceil","floor","random","dataset","toHyphenated","oldValue","newValue","submitButton","querySelector","style","display","css","_started","submitButtonHidden","addEventListener","submitButtonClick","getSubmitButton","buttonText","submitButtonText","userMessage","hasChildrenThatDemandResponse","valueSubmitEvent","callback","dontHide","hide","aaChildren","getAAChildren","isMissingValues","mandatory","attachedTimestamp","getChildrenValues","automate","goto","endEventListener","init","stopped","writeInto","target","warn","restoreHeldNodes","sIndex","next","Promise","resolve","reject","nodeType","Node","ELEMENT_NODE","fragmentChildCopy","setTimeout","stopPropagation","_mem","createElement","myTemplate","input","data","sessionID","sessionTimestamp","sessionTime","sessionName","variables","inputSubmitEvent","sessionEndEvent","myIdGenerator","sessionDatum","run","templateClone","remove","myTemplateClone","attachTemplateChildNodesToMyself","label","inputItem","classList","add","fixBugInPaperTextarea","changeInputItem","long","longHtml","textarea","overflow","width","getComputedStyle","inputElement"],"mappings":"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","file":"aaCustomElements.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","\n\n\nvar html = function (txt, ...val) {\n\n    let result = txt[0];\n    for (let i = 0; i < val.length; i++) {\n        result += val[i];\n        result += txt[i + 1];\n    }\n    return result;\n}\n\nif (window) window.html = html;\n\nexport default class BaseElement extends HTMLElement {\n\n    static registerAAElement(name, elem) {\n        if (!customElements.get(name)) {\n            window.AANodeNames = window.AANodeNames || [];\n            window.AANodeNames.push(name.toUpperCase());\n            customElements.define(name, elem);\n        }\n    }\n\n    static isAAElement(node) {\n        if (AANodeNames.indexOf(node.nodeName) != -1) {\n            return true;\n        }\n        return false;\n    }\n\n    static createFragmentForNode(node) {\n        let fragment = document.createDocumentFragment();\n        for (let i = 0; i < node.childNodes.length; i++) {\n            fragment.append(node.childNodes[i].cloneNode(true));\n        }\n        return fragment;\n    }\n\n    static createHolderForNode(o) {\n        let node = o.cloneNode(false);\n        node.innerFragment = BaseElement.createFragmentForNode(o);\n        return node;\n    }\n\n    static scanAndReplace(node) {\n        if (node.nodeName === \"TEMPLATE\") {\n            BaseElement.scanAndReplace(node.content);\n        }\n        else if (BaseElement.isAAElement(node)) {\n            let holder = BaseElement.createHolderForNode(node);\n            node.replaceWith(holder);\n        } else\n            for (let i = 0; i < node.childNodes.length; i++) {\n                BaseElement.scanAndReplace(node.childNodes[i]);\n            }\n    }\n\n    constructor() {\n        super();\n        this._props = this.makePropertiesFromAttributes();\n    }\n\n    connectedCallback() {\n        console.log(this.tagName, this.id, \" connected\");\n        this._attachedTimestamp = new Date().getTime();\n        this._debug = (this.debug === true) || (this.debug === null);\n        if (this.innerFragment) {\n            BaseElement.scanAndReplace(this.innerFragment);\n            for (let i = 0; i < this.innerFragment.childNodes.length; i++) {\n                this.appendChild(BaseElement.copy(this.innerFragment.childNodes[i]));\n            }\n\n        }\n    }\n\n\n    makePropertiesFromAttributes() {\n\n        let ElementClass = customElements.get(this.tagName.toLowerCase());\n\n        let attr = ElementClass.observedAttributes;\n        if (!attr) return null;\n        let props = {};\n        for (let i = 0; i < attr.length; i++) {\n            let prop = this.toCamelCase(attr[i]);\n            props[prop] = attr[i];\n\n\n            if (typeof this[prop] != 'undefined') {\n                continue;\n            } else {\n\n                Object.defineProperty(this, prop, {\n                    get: () => {\n\n                        let result = this.getAttribute(attr[i]);\n                        if (result === 'true') { return true; }\n                        else if (result === 'false') { return false; }\n                        else { return result; }\n                    },\n                    set: (value) => {\n                        this.setAttribute(attr[i], value);\n                    }\n                });\n            }\n        }\n        return props;\n    }\n\n    toCamelCase(str) {\n        let words = str.split('-');\n        let result = words[0];\n        for (let i = 1; i < words.length; i++) {\n            result += words[i][0].toUpperCase() + words[i].substr(1);\n        }\n        return result;\n    }\n\n    toHyphenated(str) {\n        let result = '';\n        for (let i = 0; i < str.length; i++) {\n            let letter = str[i];\n            if (letter.toLowerCase() !== letter) {\n                // letter is uppercase\n                result += `-${letter.toLowerCase()}`;\n            } else {\n                result += letter;\n            }\n        }\n        return result;\n    }\n\n    static copy(node) {\n        let nodeCopy;\n        if (BaseElement.isAAElement(node)) {\n\n            if (node.innerFragment) {\n                nodeCopy = node.cloneNode();\n                nodeCopy.innerFragment = BaseElement.createFragmentForNode(node.innerFragment);\n            } else {\n                nodeCopy = node.cloneNode();\n                nodeCopy.innerFragment = BaseElement.createFragmentForNode(node);\n            }\n        }\n        else {\n            nodeCopy = node.cloneNode(true);\n        }\n        return nodeCopy;\n    }\n\n\n    _dispatchDebugEvent(detail) {\n        if (this.debug) {\n            this.dispatchEvent(new CustomEvent('debugEvent', { detail, bubbles: true }));\n        }\n    }\n\n\n\n    _dispatchEndEvent(detail) {\n        //  use setTimeout to allow aaSequence.next() to return,\n        //  so that calls to aaSequence.next are not recursive\n        // setTimeout(()=>{\n        // debugger;\n        this.dispatchEvent(new CustomEvent('endEvent', { bubbles: true, detail }));\n        // },0);\n    }\n\n    _getParentSession() {\n        let _sessionElement = this;\n        while ((_sessionElement != null) && (_sessionElement.nodeName != 'AA-SESSION')) {\n            _sessionElement = _sessionElement.parentNode;\n        }\n        return _sessionElement;\n    }\n}\n\n\nif (!customElements.get('aa-base-element')) {\n    window.AANodeNames = window.AANodeNames || [];\n    window.AANodeNames.push('AA-BASE-ELEMENT');\n    customElements.define('aa-base-element', BaseElement);\n}\n","/**\r\n * this is a modified version of the original jsep \r\n * which if the root parameter is undefined,\r\n * the jsep object returned so as to be exported   \r\n **/ \r\n\r\n\r\n//     JavaScript Expression Parser (JSEP) 0.3.4\r\n//     JSEP may be freely distributed under the MIT License\r\n//     http://jsep.from.so/\r\n\r\n/*global module: true, exports: true, console: true */\r\nexport default (function (root) {\r\n\t'use strict';\r\n\t// Node Types\r\n\t// ----------\r\n\t\r\n\t// This is the full set of types that any JSEP node can be.\r\n\t// Store them here to save space when minified\r\n\tvar COMPOUND = 'Compound',\r\n\t\tIDENTIFIER = 'Identifier',\r\n\t\tMEMBER_EXP = 'MemberExpression',\r\n\t\tLITERAL = 'Literal',\r\n\t\tTHIS_EXP = 'ThisExpression',\r\n\t\tCALL_EXP = 'CallExpression',\r\n\t\tUNARY_EXP = 'UnaryExpression',\r\n\t\tBINARY_EXP = 'BinaryExpression',\r\n\t\tLOGICAL_EXP = 'LogicalExpression',\r\n\t\tCONDITIONAL_EXP = 'ConditionalExpression',\r\n\t\tARRAY_EXP = 'ArrayExpression',\r\n\r\n\t\tPERIOD_CODE = 46, // '.'\r\n\t\tCOMMA_CODE  = 44, // ','\r\n\t\tSQUOTE_CODE = 39, // single quote\r\n\t\tDQUOTE_CODE = 34, // double quotes\r\n\t\tOPAREN_CODE = 40, // (\r\n\t\tCPAREN_CODE = 41, // )\r\n\t\tOBRACK_CODE = 91, // [\r\n\t\tCBRACK_CODE = 93, // ]\r\n\t\tQUMARK_CODE = 63, // ?\r\n\t\tSEMCOL_CODE = 59, // ;\r\n\t\tCOLON_CODE  = 58, // :\r\n\r\n\t\tthrowError = function(message, index) {\r\n\t\t\tvar error = new Error(message + ' at character ' + index);\r\n\t\t\terror.index = index;\r\n\t\t\terror.description = message;\r\n\t\t\tthrow error;\r\n\t\t},\r\n\r\n\t// Operations\r\n\t// ----------\r\n\r\n\t// Set `t` to `true` to save space (when minified, not gzipped)\r\n\t\tt = true,\r\n\t// Use a quickly-accessible map to store all of the unary operators\r\n\t// Values are set to `true` (it really doesn't matter)\r\n\t\tunary_ops = {'-': t, '!': t, '~': t, '+': t},\r\n\t// Also use a map for the binary operations but set their values to their\r\n\t// binary precedence for quick reference:\r\n\t// see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\r\n\t\tbinary_ops = {\r\n\t\t\t'||': 1, '&&': 2, '|': 3,  '^': 4,  '&': 5,\r\n\t\t\t'==': 6, '!=': 6, '===': 6, '!==': 6,\r\n\t\t\t'<': 7,  '>': 7,  '<=': 7,  '>=': 7,\r\n\t\t\t'<<':8,  '>>': 8, '>>>': 8,\r\n\t\t\t'+': 9, '-': 9,\r\n\t\t\t'*': 10, '/': 10, '%': 10\r\n\t\t},\r\n\t// Get return the longest key length of any object\r\n\t\tgetMaxKeyLen = function(obj) {\r\n\t\t\tvar max_len = 0, len;\r\n\t\t\tfor(var key in obj) {\r\n\t\t\t\tif((len = key.length) > max_len && obj.hasOwnProperty(key)) {\r\n\t\t\t\t\tmax_len = len;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn max_len;\r\n\t\t},\r\n\t\tmax_unop_len = getMaxKeyLen(unary_ops),\r\n\t\tmax_binop_len = getMaxKeyLen(binary_ops),\r\n\t// Literals\r\n\t// ----------\r\n\t// Store the values to return for the various literals we may encounter\r\n\t\tliterals = {\r\n\t\t\t'true': true,\r\n\t\t\t'false': false,\r\n\t\t\t'null': null\r\n\t\t},\r\n\t// Except for `this`, which is special. This could be changed to something like `'self'` as well\r\n\t\tthis_str = 'this',\r\n\t// Returns the precedence of a binary operator or `0` if it isn't a binary operator\r\n\t\tbinaryPrecedence = function(op_val) {\r\n\t\t\treturn binary_ops[op_val] || 0;\r\n\t\t},\r\n\t// Utility function (gets called from multiple places)\r\n\t// Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\r\n\t\tcreateBinaryExpression = function (operator, left, right) {\r\n\t\t\tvar type = (operator === '||' || operator === '&&') ? LOGICAL_EXP : BINARY_EXP;\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\toperator: operator,\r\n\t\t\t\tleft: left,\r\n\t\t\t\tright: right\r\n\t\t\t};\r\n\t\t},\r\n\t\t// `ch` is a character code in the next three functions\r\n\t\tisDecimalDigit = function(ch) {\r\n\t\t\treturn (ch >= 48 && ch <= 57); // 0...9\r\n\t\t},\r\n\t\tisIdentifierStart = function(ch) {\r\n\t\t\treturn (ch === 36) || (ch === 95) || // `$` and `_`\r\n\t\t\t\t\t(ch >= 65 && ch <= 90) || // A...Z\r\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\r\n                    (ch >= 128 && !binary_ops[String.fromCharCode(ch)]); // any non-ASCII that is not an operator\r\n\t\t},\r\n\t\tisIdentifierPart = function(ch) {\r\n\t\t\treturn (ch === 36) || (ch === 95) || // `$` and `_`\r\n\t\t\t\t\t(ch >= 65 && ch <= 90) || // A...Z\r\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\r\n\t\t\t\t\t(ch >= 48 && ch <= 57) || // 0...9\r\n                    (ch >= 128 && !binary_ops[String.fromCharCode(ch)]); // any non-ASCII that is not an operator\r\n\t\t},\r\n\r\n\t\t// Parsing\r\n\t\t// -------\r\n\t\t// `expr` is a string with the passed in expression\r\n\t\tjsep = function(expr) {\r\n\t\t\t// `index` stores the character number we are currently at while `length` is a constant\r\n\t\t\t// All of the gobbles below will modify `index` as we move along\r\n\t\t\tvar index = 0,\r\n\t\t\t\tcharAtFunc = expr.charAt,\r\n\t\t\t\tcharCodeAtFunc = expr.charCodeAt,\r\n\t\t\t\texprI = function(i) { return charAtFunc.call(expr, i); },\r\n\t\t\t\texprICode = function(i) { return charCodeAtFunc.call(expr, i); },\r\n\t\t\t\tlength = expr.length,\r\n\r\n\t\t\t\t// Push `index` up to the next non-space character\r\n\t\t\t\tgobbleSpaces = function() {\r\n\t\t\t\t\tvar ch = exprICode(index);\r\n\t\t\t\t\t// space or tab\r\n\t\t\t\t\twhile(ch === 32 || ch === 9 || ch === 10 || ch === 13) {\r\n\t\t\t\t\t\tch = exprICode(++index);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// The main parsing function. Much of this code is dedicated to ternary expressions\r\n\t\t\t\tgobbleExpression = function() {\r\n\t\t\t\t\tvar test = gobbleBinaryExpression(),\r\n\t\t\t\t\t\tconsequent, alternate;\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tif(exprICode(index) === QUMARK_CODE) {\r\n\t\t\t\t\t\t// Ternary expression: test ? consequent : alternate\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tconsequent = gobbleExpression();\r\n\t\t\t\t\t\tif(!consequent) {\r\n\t\t\t\t\t\t\tthrowError('Expected expression', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tif(exprICode(index) === COLON_CODE) {\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\talternate = gobbleExpression();\r\n\t\t\t\t\t\t\tif(!alternate) {\r\n\t\t\t\t\t\t\t\tthrowError('Expected expression', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: CONDITIONAL_EXP,\r\n\t\t\t\t\t\t\t\ttest: test,\r\n\t\t\t\t\t\t\t\tconsequent: consequent,\r\n\t\t\t\t\t\t\t\talternate: alternate\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrowError('Expected :', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Search for the operation portion of the string (e.g. `+`, `===`)\r\n\t\t\t\t// Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\r\n\t\t\t\t// and move down from 3 to 2 to 1 character until a matching binary operation is found\r\n\t\t\t\t// then, return that binary operation\r\n\t\t\t\tgobbleBinaryOp = function() {\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tvar  to_check = expr.substr(index, max_binop_len), tc_len = to_check.length;\r\n\t\t\t\t\twhile(tc_len > 0) {\r\n\t\t\t\t\t\t// Don't accept a binary op when it is an identifier.\r\n\t\t\t\t\t\t// Binary ops that start with a identifier-valid character must be followed\r\n\t\t\t\t\t\t// by a non identifier-part valid character\r\n\t\t\t\t\t\tif(binary_ops.hasOwnProperty(to_check) && (\r\n\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\r\n\t\t\t\t\t\t\t(index+to_check.length< expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\r\n\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\tindex += tc_len;\r\n\t\t\t\t\t\t\treturn to_check;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// This function is responsible for gobbling an individual expression,\r\n\t\t\t\t// e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\r\n\t\t\t\tgobbleBinaryExpression = function() {\r\n\t\t\t\t\tvar node, biop, prec, stack, biop_info, left, right, i;\r\n\r\n\t\t\t\t\t// First, try to get the leftmost thing\r\n\t\t\t\t\t// Then, check to see if there's a binary operator operating on that leftmost thing\r\n\t\t\t\t\tleft = gobbleToken();\r\n\t\t\t\t\tbiop = gobbleBinaryOp();\r\n\r\n\t\t\t\t\t// If there wasn't a binary operator, just return the leftmost node\r\n\t\t\t\t\tif(!biop) {\r\n\t\t\t\t\t\treturn left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise, we need to start a stack to properly place the binary operations in their\r\n\t\t\t\t\t// precedence structure\r\n\t\t\t\t\tbiop_info = { value: biop, prec: binaryPrecedence(biop)};\r\n\r\n\t\t\t\t\tright = gobbleToken();\r\n\t\t\t\t\tif(!right) {\r\n\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack = [left, biop_info, right];\r\n\r\n\t\t\t\t\t// Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\r\n\t\t\t\t\twhile((biop = gobbleBinaryOp())) {\r\n\t\t\t\t\t\tprec = binaryPrecedence(biop);\r\n\r\n\t\t\t\t\t\tif(prec === 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbiop_info = { value: biop, prec: prec };\r\n\r\n\t\t\t\t\t\t// Reduce: make a binary expression from the three topmost entries.\r\n\t\t\t\t\t\twhile ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\r\n\t\t\t\t\t\t\tright = stack.pop();\r\n\t\t\t\t\t\t\tbiop = stack.pop().value;\r\n\t\t\t\t\t\t\tleft = stack.pop();\r\n\t\t\t\t\t\t\tnode = createBinaryExpression(biop, left, right);\r\n\t\t\t\t\t\t\tstack.push(node);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnode = gobbleToken();\r\n\t\t\t\t\t\tif(!node) {\r\n\t\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstack.push(biop_info, node);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti = stack.length - 1;\r\n\t\t\t\t\tnode = stack[i];\r\n\t\t\t\t\twhile(i > 1) {\r\n\t\t\t\t\t\tnode = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\r\n\t\t\t\t\t\ti -= 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// An individual part of a binary expression:\r\n\t\t\t\t// e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\r\n\t\t\t\tgobbleToken = function() {\r\n\t\t\t\t\tvar ch, to_check, tc_len;\r\n\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tch = exprICode(index);\r\n\r\n\t\t\t\t\tif(isDecimalDigit(ch) || ch === PERIOD_CODE) {\r\n\t\t\t\t\t\t// Char code 46 is a dot `.` which can start off a numeric literal\r\n\t\t\t\t\t\treturn gobbleNumericLiteral();\r\n\t\t\t\t\t} else if(ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\r\n\t\t\t\t\t\t// Single or double quotes\r\n\t\t\t\t\t\treturn gobbleStringLiteral();\r\n\t\t\t\t\t} else if (ch === OBRACK_CODE) {\r\n\t\t\t\t\t\treturn gobbleArray();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tto_check = expr.substr(index, max_unop_len);\r\n\t\t\t\t\t\ttc_len = to_check.length;\r\n\t\t\t\t\t\twhile(tc_len > 0) {\r\n\t\t\t\t\t\t// Don't accept an unary op when it is an identifier.\r\n\t\t\t\t\t\t// Unary ops that start with a identifier-valid character must be followed\r\n\t\t\t\t\t\t// by a non identifier-part valid character\r\n\t\t\t\t\t\t\tif(unary_ops.hasOwnProperty(to_check) && (\r\n\t\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\r\n\t\t\t\t\t\t\t\t(index+to_check.length < expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\r\n\t\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\t\tindex += tc_len;\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttype: UNARY_EXP,\r\n\t\t\t\t\t\t\t\t\toperator: to_check,\r\n\t\t\t\t\t\t\t\t\targument: gobbleToken(),\r\n\t\t\t\t\t\t\t\t\tprefix: true\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (isIdentifierStart(ch) || ch === OPAREN_CODE) { // open parenthesis\r\n\t\t\t\t\t\t\t// `foo`, `bar.baz`\r\n\t\t\t\t\t\t\treturn gobbleVariable();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\t// Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\r\n\t\t\t\t// keep track of everything in the numeric literal and then calling `parseFloat` on that string\r\n\t\t\t\tgobbleNumericLiteral = function() {\r\n\t\t\t\t\tvar number = '', ch, chCode;\r\n\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(exprICode(index) === PERIOD_CODE) { // can start with a decimal marker\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\r\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tch = exprI(index);\r\n\t\t\t\t\tif(ch === 'e' || ch === 'E') { // exponent marker\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\tch = exprI(index);\r\n\t\t\t\t\t\tif(ch === '+' || ch === '-') { // exponent sign\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) { //exponent itself\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!isDecimalDigit(exprICode(index-1)) ) {\r\n\t\t\t\t\t\t\tthrowError('Expected exponent (' + number + exprI(index) + ')', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tchCode = exprICode(index);\r\n\t\t\t\t\t// Check to make sure this isn't a variable name that start with a number (123abc)\r\n\t\t\t\t\tif(isIdentifierStart(chCode)) {\r\n\t\t\t\t\t\tthrowError('Variable names cannot start with a number (' +\r\n\t\t\t\t\t\t\t\t\tnumber + exprI(index) + ')', index);\r\n\t\t\t\t\t} else if(chCode === PERIOD_CODE) {\r\n\t\t\t\t\t\tthrowError('Unexpected period', index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\tvalue: parseFloat(number),\r\n\t\t\t\t\t\traw: number\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Parses a string literal, staring with single or double quotes with basic support for escape codes\r\n\t\t\t\t// e.g. `\"hello world\"`, `'this is\\nJSEP'`\r\n\t\t\t\tgobbleStringLiteral = function() {\r\n\t\t\t\t\tvar str = '', quote = exprI(index++), closed = false, ch;\r\n\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tch = exprI(index++);\r\n\t\t\t\t\t\tif(ch === quote) {\r\n\t\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if(ch === '\\\\') {\r\n\t\t\t\t\t\t\t// Check for all of the common escape codes\r\n\t\t\t\t\t\t\tch = exprI(index++);\r\n\t\t\t\t\t\t\tswitch(ch) {\r\n\t\t\t\t\t\t\t\tcase 'n': str += '\\n'; break;\r\n\t\t\t\t\t\t\t\tcase 'r': str += '\\r'; break;\r\n\t\t\t\t\t\t\t\tcase 't': str += '\\t'; break;\r\n\t\t\t\t\t\t\t\tcase 'b': str += '\\b'; break;\r\n\t\t\t\t\t\t\t\tcase 'f': str += '\\f'; break;\r\n\t\t\t\t\t\t\t\tcase 'v': str += '\\x0B'; break;\r\n\t\t\t\t\t\t\t\tdefault : str += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!closed) {\r\n\t\t\t\t\t\tthrowError('Unclosed quote after \"'+str+'\"', index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\tvalue: str,\r\n\t\t\t\t\t\traw: quote + str + quote\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobbles only identifiers\r\n\t\t\t\t// e.g.: `foo`, `_value`, `$x1`\r\n\t\t\t\t// Also, this function checks if that identifier is a literal:\r\n\t\t\t\t// (e.g. `true`, `false`, `null`) or `this`\r\n\t\t\t\tgobbleIdentifier = function() {\r\n\t\t\t\t\tvar ch = exprICode(index), start = index, identifier;\r\n\r\n\t\t\t\t\tif(isIdentifierStart(ch)) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrowError('Unexpected ' + exprI(index), index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tch = exprICode(index);\r\n\t\t\t\t\t\tif(isIdentifierPart(ch)) {\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tidentifier = expr.slice(start, index);\r\n\r\n\t\t\t\t\tif(literals.hasOwnProperty(identifier)) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\t\tvalue: literals[identifier],\r\n\t\t\t\t\t\t\traw: identifier\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else if(identifier === this_str) {\r\n\t\t\t\t\t\treturn { type: THIS_EXP };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: IDENTIFIER,\r\n\t\t\t\t\t\t\tname: identifier\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobbles a list of arguments within the context of a function call\r\n\t\t\t\t// or array literal. This function also assumes that the opening character\r\n\t\t\t\t// `(` or `[` has already been gobbled, and gobbles expressions and commas\r\n\t\t\t\t// until the terminator character `)` or `]` is encountered.\r\n\t\t\t\t// e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\r\n\t\t\t\tgobbleArguments = function(termination) {\r\n\t\t\t\t\tvar ch_i, args = [], node, closed = false;\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t\tif(ch_i === termination) { // done parsing\r\n\t\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (ch_i === COMMA_CODE) { // between expressions\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnode = gobbleExpression();\r\n\t\t\t\t\t\t\tif(!node || node.type === COMPOUND) {\r\n\t\t\t\t\t\t\t\tthrowError('Expected comma', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\targs.push(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!closed) {\r\n\t\t\t\t\t\tthrowError('Expected ' + String.fromCharCode(termination), index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn args;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobble a non-literal variable name. This variable name may include properties\r\n\t\t\t\t// e.g. `foo`, `bar.baz`, `foo['bar'].baz`\r\n\t\t\t\t// It also gobbles function calls:\r\n\t\t\t\t// e.g. `Math.acos(obj.angle)`\r\n\t\t\t\tgobbleVariable = function() {\r\n\t\t\t\t\tvar ch_i, node;\r\n\t\t\t\t\tch_i = exprICode(index);\r\n\r\n\t\t\t\t\tif(ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\tnode = gobbleGroup();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode = gobbleIdentifier();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\twhile(ch_i === PERIOD_CODE || ch_i === OBRACK_CODE || ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tif(ch_i === PERIOD_CODE) {\r\n\t\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\r\n\t\t\t\t\t\t\t\tcomputed: false,\r\n\t\t\t\t\t\t\t\tobject: node,\r\n\t\t\t\t\t\t\t\tproperty: gobbleIdentifier()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else if(ch_i === OBRACK_CODE) {\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\r\n\t\t\t\t\t\t\t\tcomputed: true,\r\n\t\t\t\t\t\t\t\tobject: node,\r\n\t\t\t\t\t\t\t\tproperty: gobbleExpression()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t\t\tif(ch_i !== CBRACK_CODE) {\r\n\t\t\t\t\t\t\t\tthrowError('Unclosed [', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else if(ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\t\t// A function call is being made; gobble all the arguments\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: CALL_EXP,\r\n\t\t\t\t\t\t\t\t'arguments': gobbleArguments(CPAREN_CODE),\r\n\t\t\t\t\t\t\t\tcallee: node\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Responsible for parsing a group of things within parentheses `()`\r\n\t\t\t\t// This function assumes that it needs to gobble the opening parenthesis\r\n\t\t\t\t// and then tries to gobble everything within that parenthesis, assuming\r\n\t\t\t\t// that the next thing it should see is the close parenthesis. If not,\r\n\t\t\t\t// then the expression probably doesn't have a `)`\r\n\t\t\t\tgobbleGroup = function() {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tvar node = gobbleExpression();\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tif(exprICode(index) === CPAREN_CODE) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\treturn node;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrowError('Unclosed (', index);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Responsible for parsing Array literals `[1, 2, 3]`\r\n\t\t\t\t// This function assumes that it needs to gobble the opening bracket\r\n\t\t\t\t// and then tries to gobble the expressions as arguments.\r\n\t\t\t\tgobbleArray = function() {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: ARRAY_EXP,\r\n\t\t\t\t\t\telements: gobbleArguments(CBRACK_CODE)\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\tnodes = [], ch_i, node;\r\n\r\n\t\t\twhile(index < length) {\r\n\t\t\t\tch_i = exprICode(index);\r\n\r\n\t\t\t\t// Expressions can be separated by semicolons, commas, or just inferred without any\r\n\t\t\t\t// separators\r\n\t\t\t\tif(ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\r\n\t\t\t\t\tindex++; // ignore separators\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Try to gobble each expression individually\r\n\t\t\t\t\tif((node = gobbleExpression())) {\r\n\t\t\t\t\t\tnodes.push(node);\r\n\t\t\t\t\t// If we weren't able to find a binary expression and are out of room, then\r\n\t\t\t\t\t// the expression passed in probably has too much\r\n\t\t\t\t\t} else if(index < length) {\r\n\t\t\t\t\t\tthrowError('Unexpected \"' + exprI(index) + '\"', index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If there's only one expression just try returning the expression\r\n\t\t\tif(nodes.length === 1) {\r\n\t\t\t\treturn nodes[0];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: COMPOUND,\r\n\t\t\t\t\tbody: nodes\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t// To be filled in by the template\r\n\tjsep.version = '0.3.4';\r\n\tjsep.toString = function() { return 'JavaScript Expression Parser (JSEP) v' + jsep.version; };\r\n\r\n\t/**\r\n\t * @method jsep.addUnaryOp\r\n\t * @param {string} op_name The name of the unary op to add\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addUnaryOp = function(op_name) {\r\n\t\tmax_unop_len = Math.max(op_name.length, max_unop_len);\r\n\t\tunary_ops[op_name] = t; return this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.addBinaryOp\r\n\t * @param {string} op_name The name of the binary op to add\r\n\t * @param {number} precedence The precedence of the binary op (can be a float)\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addBinaryOp = function(op_name, precedence) {\r\n\t\tmax_binop_len = Math.max(op_name.length, max_binop_len);\r\n\t\tbinary_ops[op_name] = precedence;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.addLiteral\r\n\t * @param {string} literal_name The name of the literal to add\r\n\t * @param {*} literal_value The value of the literal\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addLiteral = function(literal_name, literal_value) {\r\n\t\tliterals[literal_name] = literal_value;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeUnaryOp\r\n\t * @param {string} op_name The name of the unary op to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeUnaryOp = function(op_name) {\r\n\t\tdelete unary_ops[op_name];\r\n\t\tif(op_name.length === max_unop_len) {\r\n\t\t\tmax_unop_len = getMaxKeyLen(unary_ops);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllUnaryOps\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllUnaryOps = function() {\r\n\t\tunary_ops = {};\r\n\t\tmax_unop_len = 0;\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeBinaryOp\r\n\t * @param {string} op_name The name of the binary op to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeBinaryOp = function(op_name) {\r\n\t\tdelete binary_ops[op_name];\r\n\t\tif(op_name.length === max_binop_len) {\r\n\t\t\tmax_binop_len = getMaxKeyLen(binary_ops);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllBinaryOps\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllBinaryOps = function() {\r\n\t\tbinary_ops = {};\r\n\t\tmax_binop_len = 0;\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeLiteral\r\n\t * @param {string} literal_name The name of the literal to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeLiteral = function(literal_name) {\r\n\t\tdelete literals[literal_name];\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllLiterals\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllLiterals = function() {\r\n\t\tliterals = {};\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t// In desktop environments, have a way to restore the old value for `jsep`\r\n\tif (typeof exports === 'undefined') {\r\n\r\n\t\tif(!root){\r\n\t\t\treturn  jsep;\r\n\t\t}\r\n\t\tvar old_jsep = root.jsep;\r\n\t\t// The star of the show! It's a function!\r\n\t\troot.jsep = jsep;\r\n\t\t// And a courteous function willing to move out of the way for other similarly-named objects!\r\n\t\tjsep.noConflict = function() {\r\n\t\t\tif(root.jsep === jsep) {\r\n\t\t\t\troot.jsep = old_jsep;\r\n\t\t\t}\r\n\t\t\treturn jsep;\r\n\t\t};\r\n\t} else {\r\n\t\t// In Node.JS environments\r\n\t\tif (typeof module !== 'undefined' && module.exports) {\r\n\t\t\texports = module.exports = jsep;\r\n\t\t} else {\r\n\t\t\texports.parse = jsep;\r\n\t\t}\r\n\t}\r\n}(this));\r\n","import BaseElement from './../aa-baseElement/baseElement.js';\nimport './aa-when/aa-when.js';\nimport './aa-otherwise/aa-otherwise.js';\n\n\nimport jsep from '../../lib/jsep/jsep.js';\nexport default class AAChoose extends BaseElement {\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = \"<slot></slot>\"\n        this.originalContent = this.innerHTML;\n    }\n\n\n    connectedCallback() {\n        this._shouldRun = (this.shouldRun === null) || (this.shouldRun === true);\n        this.sessionElement = this._getParentSession();\n        if (this._shouldRun) {\n            if (typeof this.innerFragment !== 'undefined') {\n                BaseElement.scanAndReplace(this.innerFragment);\n                let nodes = this._getNodeToInstantiate();\n                if (nodes.length === 0) {\n                    this._dispatchEndEvent();\n                } else {\n                    for (let i = 0; i < nodes.length; i++) {\n                        let node = nodes[i];\n                        if (typeof node !== 'undefined') {\n                            this.appendChild(node);\n                        }\n                    }\n                    this._dispatchEndEvent();\n                }\n            }\n            else {\n                if (this.childNodes.length === 0) {\n                    this._dispatchEndEvent();\n                }\n            }\n        }\n    }\n\n    _getNodeToInstantiate() {\n        let nodesToReturn = [];\n        let nodeOtherwise = [];\n        let isChildTrue = false;\n        for (let i = 0; i < this.innerFragment.children.length; i++) {\n            let child = this.innerFragment.children[i];\n            if (child.nodeName === 'AA-WHEN') {\n                isChildTrue = this.evaluate(child);\n                if (isChildTrue) {\n                    nodesToReturn.push(BaseElement.copy(child).innerFragment);\n                }\n            } else if (child.nodeName === 'AA-OTHERWISE') {\n                nodeOtherwise.push(BaseElement.copy(child).innerFragment);\n            }\n        }\n        if (nodesToReturn.length === 0) {\n            return nodeOtherwise;\n        }\n        else {\n            return nodesToReturn;\n        }\n    }\n\n    run() {\n        this.started = true;\n        if (this.myFragmentChildren.length === 0) return;\n        if (this.fragmentChildrenCounter >= this.myFragmentChildren.length) return;\n        if (!this.currentNode) { this.formerNodes.push(this.currentNode); }\n        let finalFragmentChild;\n        let fragmentChild = this.myFragmentChildren[this.fragmentChildrenCounter];\n        if (this.isHolder(fragmentChild)) {\n            finalFragmentChild = this.replaceHolderWithElement(fragmentChild);\n        }\n        else {\n            finalFragmentChild = fragmentChild;\n        }\n        this.appendChild(finalFragmentChild);\n        this._restoreHeldNodes(finalFragmentChild);\n        this.fragmentChildrenCounter += 1;\n    }\n\n    evaluate(element) {\n        let test = element.getAttribute('test');\n        if ((test == null) || (test == '')) return null;\n        return this.evaluateTestExpression(test);\n    }\n\n    evaluateTestExpression(test) {\n\n        let expr = this.replaceExpressionIdentifiersWithValues(test);\n        // after replacing known variable names with their values in the string, test to see if the expression can be parsed\n        try {\n            var parseTree = jsep(expr);\n            if ((parseTree.left.type == \"Literal\") && (parseTree.right.type == \"Literal\")) {\n                return eval(expr);\n            }\n            else {\n                // there are still strings in the expression, which are unknown, an exception should be raised\n                throw \"unknown identifiers in expression : \" + expr;\n            }\n        } catch (e) {\n            console.error(\"parse error:\", e);\n        }\n    }\n\n    replaceExpressionIdentifiersWithValues(expression) {\n        let session = this._getParentSession();\n        let result = expression.toUpperCase();\n\n        let originalIdentifiers = Object.keys(session.getDataDump());\n        let upperCaseIdentifiers = originalIdentifiers.map(s => s.toUpperCase());\n        for (let i in upperCaseIdentifiers) {\n            let value = session.getData(originalIdentifiers[i]);\n            let finalValue = parseInt(value);\n            if (finalValue != value) {\n                if (value === \"null\") { finalValue = `null`; }\n                else if (value === \"true\") { finalValue = \"true\"; }\n                else if (value === \"false\") { finalValue = \"false\" }\n                else finalValue = `\"${value}\"`\n            }\n            let r = new RegExp(upperCaseIdentifiers[i], \"g\");\n            result = result.replace(r, finalValue);\n        }\n        return result;\n    }\n}\n\nBaseElement.registerAAElement('aa-choose', AAChoose);\n\n","import BaseElement from './../../aa-baseElement/baseElement.js';\n\nexport default class AAWhen extends BaseElement {\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = '<slot></slot>'\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n\nBaseElement.registerAAElement('aa-when', AAWhen);\n\n","import BaseElement from '../../aa-baseElement/baseElement.js';\n\nexport default class AAOtherwise extends BaseElement {\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n    }\n}\n\n\nBaseElement.registerAAElement('aa-otherwise', AAOtherwise);\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import BaseElement from './../aa-baseElement/baseElement.js'\nexport default class AAVariable extends BaseElement {\n\n\n    static get observedAttributes() {\n        return [\n            'name',\n            'value'\n        ];\n    }\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback(){\n        let session = this._getParentSession();\n        session.setData(this.name, this.value);\n    };\n\n\n}\n\nBaseElement.registerAAElement('aa-variable', AAVariable);\n\n","import BaseElement from '../aa-baseElement/baseElement.js';\n\nexport default class AAFunctionRandom extends BaseElement {\n\n    static get observedAttributes() {\n        return ['name', 'debug', 'value', 'min', 'max'];\n    }\n    constructor(){\n        super();\n    }\n\n    connectedCallback(){\n        let session = this._getParentSession()\n        this.value = this.getValue();\n        session.setData(this.name, this.value);\n        this._dispatchEndEvent({autoDispatch:true});\n    }\n\n    getValue()\n    {\n        var parsedMin = parseFloat(this.min);\n        var parsedMax = parseFloat(this.max);\n        return this.getRandomInt(parsedMin, parsedMax);\n    }\n\n    getRandomInt(min, max)\n    {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + 0.5) + min;\n    }\n\n\n}\n\nBaseElement.registerAAElement('aa-function-random', AAFunctionRandom);\n\n","import BaseElement from './../aa-baseElement/baseElement.js'\n\n\n\nexport default class AAMemory extends BaseElement {\n\n    get observedAttributes(){\n        return [\"name\"];\n    }\n\n    constructor(){\n        super();\n    }\n\n    connectedCallback(){\n        \n    }\n\n    setData(name,value){\n        this.dataset[name] = value;\n    }\n\n    getData(name){\n        return this.dataset[this.toHyphenated(name)];\n    }\n}\n\nBaseElement.registerAAElement('aa-memory', AAMemory);\n","import BaseElement from './../aa-baseElement/baseElement.js';\n\n\nexport default class AAScreen extends BaseElement {\n\n\n\n    static get observedAttributes() {\n        return [\n            'submit-button-text',\n            'submit-button-hidden',\n            'name'\n        ];\n    }\n\n\n    attributeChangedCallback(name, oldValue, newValue) {\n        switch(name){\n            case 'submit-button-text':\n                this.submitButton.innerHTML = newValue;\n                break;\n            case 'submit-button-hidden':\n                if((newValue!==true)||(newValue!=='true')){\n                    this.root.querySelector('.submitButtonContainer').style.display='block';\n                } else{\n                    this.root.querySelector('.submitButtonContainer').style.display='none';\n                }\n                break;\n        }\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n       \n        this.root.innerHTML = this.css + this.html;\n        this.submitButton = this.root.querySelector('.submitButton');\n\n        if (this._started) { return; }\n        this._started = true;\n\n        if (this.submitButtonHidden) {\n            this.root.querySelector('.submitButtonContainer').style.display = 'none';\n        }\n\n        \n        this.root.querySelector('.submitButton').addEventListener('click', this.submitButtonClick.bind(this));\n\n    }\n\n\n    get css() {\n\n        return html`<style>\n                :host {\n                    display: block;\n                    height: fit-content;\n                    padding:20px;\n                    font-family:sans-serif;\n                }\n\n                .submitButtonContainer{\n                    text-align:right;\n                    justify-content: space-between; \n                    align-items:center;\n                    padding:20px;\n                }\n\n\n                paper-button.darkBlue {\n                    background-color: #0d47a1;\n                    color: white;\n                 }\n  \n         </style>`;\n    }\n\n    get html() {\n        return html`\n            <slot></slot>\n            <div id='userMessage'>\n            <div class='submitButtonContainer'>\n                <div>\n                    ${this.getSubmitButton()}\n            </div>\n                <div id='userMessage'></div>\n            </div>`;\n    }\n\n    getSubmitButton() {\n        let buttonText = this.submitButtonText || 'submit';\n        if (customElements.get('paper-button')) {\n            return html`<paper-button class='submitButton darkBlue' raised class='indigo'>${buttonText}</paper-button>`;\n        } else {\n            return html`<button class='submitButton'>${buttonText}</button>`;\n        }\n    }\n\n    submitButtonClick(e) {\n\n        let userMessage = this.querySelector('#userMessage');\n        if (this.hasChildrenThatDemandResponse()) {\n\n            userMessage.innerHTML = html`\n                    <div style='display:flex; align-items:center'> \n                        <div>please fill out the required fields</div> \n                            <div id='attention' style='color: red; font-size: 20px;  border: solid thin; border-radius: 50%; width: 20px;\n                                                margin-left:20px; height: 20px; \n                                                text-align: center;\n                                                padding: 5px;'>!</div></div>`;\n            return;\n        }\n\n        let valueSubmitEvent = new CustomEvent('valueSubmit', { bubbles: true, detail: { value: this.getValue() } });\n        this.dispatchEvent(valueSubmitEvent);\n        this._dispatchEndEvent(this.getValue());\n        if (typeof e.detail.callback != 'undefined') {\n            e.detail.callback(e);\n        }\n        if (this.dontHide === false) {this.hide();}\n\n    }\n\n\n\n\n\n\n    hasChildrenThatDemandResponse() {\n\n        let aaChildren = this.getAAChildren(this);\n        let isMissingValues = false;\n        for (let i = 0; i < aaChildren.length; i++) {\n            if (aaChildren[i].mandatory) {\n                if (child.getValue() === null) {\n                    // console.log(child, 'demands response');\n                    // TODO : add a class to the child\n                    isMissingValues = true;\n                }\n            }\n        }\n\n        return isMissingValues;\n    }\n\n    getAAChildren() {\n        let result = [];\n        for (let i = 0; i < this.children.length; i++) {\n            if (BaseElement.isAAElement(this.children[i])) { result.push(this.children[i]); }\n        }\n        return result;\n    }\n\n\n\n    getChildrenValues(){\n        let result = [];\n        \n        for(let i=0; i<this.children.length; i++){\n            let c = this.children[i];\n            if(c.getValue){\n                result.push(c.getValue());\n            } else{\n                if(c.value){\n                    result.push({ [c.name]: c.value });\n                }\n            }\n        }\n        return result;\n    }\n\n\n\n\n\n    getValue() {\n        let __meta = {\n            attachedTimestamp: this.attachedTimestamp,\n            submitTimestamp: new Date().getTime()\n        };\n        let result = this.getChildrenValues(this);\n        return result;\n    }\n\n    getValueWithKey() {\n        let result = {};\n        result[this.name] = this.getValue();\n        return result;\n    }\n\n\n    automate() {\n        for (let i = 0; i < this.children.length; i++) {\n            if (BaseElement.isAAElement(this.children[i])) {\n                if (typeof this.children[i].automate != 'undefined') {\n                    this.children[i].automate();\n                }\n            }\n        }\n        this.submitButtonClick();\n    }\n\n    hide() {\n        this.style.display = 'none';\n    }\n\n    show() {\n        this.style.display = 'block';\n    }\n}\n\nBaseElement.registerAAElement('aa-screen', AAScreen);\n\n","import BaseElement from '../../aa-baseElement/baseElement.js';\n\nexport default class AAJump extends BaseElement {\n\n    static get observedAttributes() {\n        return ['name', 'goto'];\n    }\n\n    connectedCallback() {\n        this._dispatchEndEvent({ goto: this.goto, autoDispatch: true })\n    }\n}\n\nBaseElement.registerAAElement('aa-jump', AAJump);\n","import BaseElement from './../aa-baseElement/baseElement.js';\nimport './aa-jump/aa-jump.js';\n\n\n\nexport default class AASequence extends BaseElement {\n\n\nstatic get observedAttributes() {\n        return ['name', 'write-into', 'should-run', 'debug', 'type', 'stopped'];\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = '<slot></slot>';\n    }\n    connectedCallback() {\n        this.root.addEventListener('endEvent', this.endEventListener.bind(this));\n        if ((this.shouldRun === null) || (this.shouldRun === true)) {\n            this.init()\n        };\n    }\n\n\n    get css() {\n        return html`\n            <style>\n                :host {\n                    display: block;\n                }\n            </style>\n        `\n    }\n\n    get html() {\n        return html`\n            <slot></slot>\n            <button id='nextButton' hidden></button>\n        `\n    }\n\n    init() {\n        this.stopped = false;\n        if (this.writeInto) {\n            this.target = document.querySelector(this.writeInto);\n        } else {\n            this.target = this;\n        }\n\n\n\n        if (typeof this.innerFragment === 'undefined') {\n            console.warn('.innerFragment is undefined');\n            this.restoreHeldNodes(this)\n            return;\n        }\n\n\n        this.sIndex = 0;\n        if (!this.stopped) { this.start() }\n    }\n\n    start() {\n        if (this.stopped) { return; }\n        this.stopped = false;\n        this.next();\n    }\n\n    stop() {\n        this.stopped = true;\n    }\n\n\n\n\n    next(name) {\n        return new Promise((resolve, reject) => {\n\n\n            if (this.stopped) { return; }\n            if (this.sIndex >= this.innerFragment.childNodes.length) return null;\n\n            if (typeof name === 'string') {\n                for (let i = 0; i < this.innerFragment.childNodes.length; i++) {\n                    if (this.innerFragment.childNodes[i].getAttribute) if (this.innerFragment.childNodes[i].getAttribute('name') == name) {\n                        this.sIndex = i;\n                        break;\n                    }\n                }\n            }\n\n            let fragmentChild = this.innerFragment.childNodes[this.sIndex];\n            //  if the child is not an element just add it immediately \n            //  and move on to the next, there won't be a connectecCallback Function to execute anyway\n            while (fragmentChild.nodeType != Node.ELEMENT_NODE) {\n\n                let fragmentChildCopy = BaseElement.copy(fragmentChild);\n                this.target.appendChild(fragmentChildCopy);\n                this.currentNode = fragmentChildCopy;\n                this.sIndex++;\n                if (this.sIndex >= this.innerFragment.childNodes.length) { return; }\n                fragmentChild = this.innerFragment.childNodes[this.sIndex];\n            }\n            let fragmentChildCopy = BaseElement.copy(fragmentChild);\n            this.currentNode = fragmentChildCopy;\n            this.sIndex += 1;\n            if (!fragmentChildCopy._dispatchEndEvent) {\n                resolve(this.next());\n            } else {\n                this.target.appendChild(fragmentChildCopy);\n                setTimeout(() => resolve());\n            }\n        })\n    }\n\n    endEventListener(e) {\n        e.stopPropagation();\n        if (e.detail) {\n            if (e.detail.goto) { this.next(e.detail.goto); }\n            else if (e.detail.autoDispatch) { this.next(true); } \n            else { setTimeout(() => this.next(true));}\n        } else {\n            setTimeout(() => this.next(true))\n        }\n    }\n}\n\nBaseElement.registerAAElement('aa-sequence', AASequence);\n\n\n","import BaseElement from './../aa-baseElement/baseElement.js'\n\nimport  './../aa-memory/aa-memory.js'\n\nexport default class AASession extends BaseElement {\n\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n\n\n    constructor() {\n        super();\n        this._mem = document.createElement('aa-memory');\n\n        this.myTemplate = document.createElement('template');\n        this.myTemplate.innerHTML = this.innerHTML;\n        this.innerHTML = '';\n\n        // this.root = this.attachShadow({ mode: 'closed' });\n        // this.root.innerHTML = '<template><slot></slot></template>'\n\n        this.addEventListener('valueSubmit', (e) => {\n\n\n            // e.stopPropagation();\n            let input = {\n                data: e.detail.value,\n                sessionID: this.sessionID,\n                sessionTimestamp: this.sessionTime,\n                sessionName: this.name,\n                variables: Object.keys(e.detail.value),\n            };\n           // TODO:  this._mem.saveReplyValue(e.detail.value, false);\n\n\n            let inputSubmitEvent = new CustomEvent('inputSubmit', { bubbles: true, detail: { input } });\n            this.dispatchEvent(inputSubmitEvent);\n            //  ema-participant-client needs to catch this and either send it to the server,\n            //  or store it locally if we are offline\n            //  A reason that ema-participant-client needs to do this, is because it cares\n            //  about identification tokens\n\n\n        })\n\n        this.addEventListener('endEvent', (e) => {\n            if(!this.debug) e.stopPropagation();\n            let sessionEndEvent = new CustomEvent('sessionEndEvent', { bubbles: true, detail: 'sessionEnd' });\n            this.dispatchEvent(sessionEndEvent);\n        })\n\n\n    }\n\n    myIdGenerator() {\n\n        return 0;\n    }\n\n    connectedCallback() {\n\n        this.sessionID = this.myIdGenerator();\n        this.sessionTime = new Date().getTime();\n        let sessionDatum = Object.keys(this.dataset);\n        for(let i in sessionDatum){\n            this.setData(sessionDatum[i], this.dataset[sessionDatum[i]]);\n        }\n        if ((this.shouldRun === null) || (this.shouldRun === true)) {\n            this.run();\n        }\n    }\n\n\n    attachTemplateChildNodesToMyself(templateClone){\n        \n        while(templateClone.content.childNodes.length){\n            //  if there's a direct template child, we want its children appended too\n            if(templateClone.content.childNodes[0].nodeName===\"TEMPLATE\"){\n                while(templateClone.content.childNodes[0].content.childNodes.length){\n                    this.appendChild(templateClone.content.childNodes[0].content.childNodes[0])\n                }\n                //  we are not appending the template element elsewhere \n                //  so throw it way so that the childnode count can be reduced\n                templateClone.content.childNodes[0].remove();\n            }else{\n                this.appendChild(templateClone.content.childNodes[0]);\n            }\n        }\n    }\n\n    run() {\n\n        let myTemplateClone = this.myTemplate.cloneNode(true);\n        BaseElement.scanAndReplace(myTemplateClone);   \n        this.attachTemplateChildNodesToMyself(myTemplateClone);\n\n    }\n\n    getData(name){\n        return this._mem.getData(name);\n    }\n    setData(name, value){\n        return this._mem.setData(name, value);\n    }\n\n    getDataDump(){\n        return this._mem.dataset;\n    }\n\n}\n\nBaseElement.registerAAElement('aa-session', AASession);\n\n\n\n\n\n\n\n","import BaseElement from '../aa-baseElement/baseElement.js';\nexport default class AATextAnswer extends BaseElement {\n\n    static get observedAttributes() {\n        return [\n            'long',\n            'label',\n            'name',\n            'value'\n        ];\n    }\n\n\n    changeInputItem(type) {\n        if (type === 'long') {\n            let value = this.value;\n            let label = this.label;\n            this.inputItem = customElements.get('paper-textarea') ?\n                document.createElement('paper-textarea') : document.createElement('textarea');\n            this.inputItem.value = value;\n            this.inputItem.label = label;\n            this.inputItem.classList.add('inputItem');\n            this.fixBugInPaperTextarea(this.inputItem);\n            this.inputItem.addEventListener('change', (e) => {\n                this.value = e.target.value;\n            })\n            this.root.querySelector('.inputItem').replaceWith(this.inputItem);\n        } else {\n            let value = this.value;\n            let label = this.label;\n            this.inputItem = customElements.get('paper-input') ?\n                document.createElement('paper-input') : document.createElement('input');\n            this.inputItem.value = value;\n            this.inputItem.label = label;\n            this.inputItem.classList.add('inputItem');\n            this.inputItem.addEventListener('change', (e) => {\n                this.value = e.target.value;\n            })\n            this.root.querySelector('.inputItem').replaceWith(this.inputItem);\n        }\n    }\n\n\n    get value() {\n        if (!this.inputItem) {\n            return this.getAttribute('value');\n        }\n        return this.inputItem.value;\n    }\n    set value(val) {\n        this.setAttribute('value', val);\n        if (this.inputItem) {\n            this.inputItem.value = val;\n        }\n\n    }\n\n    get label() {\n        return this.getAttribute('label');\n    }\n\n    set label(val) {\n        this.setAttribute('label', val);\n        if (this.inputItem) {\n            this.inputItem.label = val;\n        }\n    }\n\n    set long(val) {\n        this.setAttribute('long', val);\n        if (val) {\n            this.changeInputItem('long');\n        } else {\n            this.changeInputItem('short');\n        }\n    }\n\n    get long() {\n        return this.getAttribute('long');\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        let html = (this.long || (this.long === '')) ? this.longHtml : this.html;\n\n        this.root.innerHTML = this.css + `<div class='inputContainer'>${html}<div>`;\n\n        let label = this.label;\n        let value = this.value;\n        this.inputItem = this.root.querySelector('.inputItem');\n        if (label) { this.inputItem.label = label; }\n        if (value) { this.inputItem.value = value; }\n        this.fixBugInPaperTextarea(this.inputItem);\n\n        this.inputItem.addEventListener('change', (e) => {\n            this.value = e.target.value;\n        })\n    }\n\n\n    fixBugInPaperTextarea(inputItem) {\n        // solves issue documented here: https://github.com/PolymerElements/paper-input/issues/125\n\n        setTimeout(() => {\n            if (inputItem.tagName === 'PAPER-TEXTAREA') {\n                inputItem.root.childNodes[2].children[1].textarea.style.overflow = 'hidden';\n                let width = window.getComputedStyle(this.root.querySelector('.inputContainer')).width;\n\n                inputItem.root.childNodes[2].style.width = width;\n                inputItem.addEventListener('focus', (e) => {\n                    let width = window.getComputedStyle(this.root.querySelector('.inputContainer')).width;\n                    inputItem.root.childNodes[2].style.width = width;\n                })\n\n                window.addEventListener('resize', () => {\n                    inputItem.root.childNodes[2].style.width = '';\n                    setTimeout(() => {\n                        let width = window.getComputedStyle(this.root.querySelector('.inputContainer')).width;\n                        inputItem.root.childNodes[2].style.width = width;\n                    }, 100);\n\n                })\n            };\n        }, 0);\n        \n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n\n    }\n\n    get css() {\n        return `<style>\n        :host{\n            display:block;\n            overflow:hidden;        \n        }\n        paper-textarea textarea {\n           overflow:hidden;\n        }\n        </style>`;\n    }\n\n    get html() {\n        let inputElement = customElements.get('paper-input')\n            ? `<paper-input class='inputItem'></paper-input>`\n            : `<input class='inputItem'>`;\n        return html`${inputElement}`\n    }\n    get longHtml() {\n        let inputElement = customElements.get('paper-input')\n            ? `<paper-textarea class='inputItem'></paper-input>`\n            : `<textarea class='inputItem'></textarea`;\n        return html`${inputElement}`\n    }\n\n}\n\nBaseElement.registerAAElement('aa-text-answer', AATextAnswer);"],"sourceRoot":""}