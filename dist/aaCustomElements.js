/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/webpack/buildin/harmony-module.js":
/*!*******************************************!*\
  !*** (webpack)/buildin/harmony-module.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n\n//# sourceURL=webpack:///(webpack)/buildin/harmony-module.js?");

/***/ }),

/***/ "./src/aa-baseElement/baseElement.js":
/*!*******************************************!*\
  !*** ./src/aa-baseElement/baseElement.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return BaseElement; });\nconsole.log(\"loading baseElement\");\n\n\nvar html = function (txt, ...val) {\n\n    let result = txt[0];\n    for (let i = 0; i < val.length; i++) {\n        result += val[i];\n        result += txt[i + 1];\n    }\n    return result;\n}\n\nif(window) window.html = html;\n\nclass BaseElement extends HTMLElement {\n\n\n    constructor() {\n        super();\n        this._props = this.makePropertiesFromAttributes();\n    }\n\n    connectedCallback() {\n        this._attachedTimestamp = new Date().getTime();\n        this._debug = (this.debug===true)||(this.debug===null);\n    }\n\n\n    makePropertiesFromAttributes() {\n        \n        let ElementClass = customElements.get(this.tagName.toLowerCase());\n\n        let attr = ElementClass.observedAttributes;\n        if (!attr) return null;\n        let props = {};\n        for (let i = 0; i < attr.length; i++) {\n            let prop = this.toCamelCase(attr[i]);\n            props[prop] = attr[i];\n\n\n            if (typeof this[prop] != 'undefined') {\n                // console.log(prop, this[prop]);\n                continue;\n            } else {\n                // console.log('defining property for ', prop);\n                Object.defineProperty(this, prop, {\n                    get: () => {\n                     \n                        let result = this.getAttribute(attr[i]);\n                        if (result === 'true') { return true; }\n                        else if (result === 'false') { return false; }\n                        else { return result; }\n                    },\n                    set: (value) => {\n                        this.setAttribute(attr[i], value);\n                    }\n                });\n            }\n        }\n        return props;\n    }\n\n    // setAttributes(){\n    //     let propKeys = Object.keys(this._props)\n    //     for(let i=0; i<propKeys.length; i++){\n    //         let p = this._propKeys[i];\n    //         if(this[p]){\n    //             this.setAttribute(this._props[p])\n    //         }\n    //     }\n    // }\n    toCamelCase(str) {\n        let words = str.split('-');\n        let result = words[0];\n        for (let i = 1; i < words.length; i++) {\n            result += words[i][0].toUpperCase() + words[i].substr(1);\n        }\n        return result;\n    }\n\n    toHyphenated(str) {\n        let result = '';\n        for (let i = 0; i < str.length; i++) {\n            let letter = str[i];\n            if (letter.toLowerCase() !== letter) {\n                // letter is uppercase\n                result += `-${letter.toLowerCase()}`;\n            } else {\n                result += letter;\n            }\n        }\n        return result;\n    }\n\n    _replaceChildNodesWithHolderElements(element) {\n        // console.log(element, 'isAAElement=', this._isAAElement(element))\n        if (this._isAAElement(element)) {\n            this._replaceElementWithHolder(element);\n        }\n        else for (let i = 0; i < element.childNodes.length; i++) {\n            // if (this._isAAElement(element.childNodes[i])) {\n            //     this._replaceElementWithHolder(element.childNodes[i])\n            // } else {\n                this._replaceChildNodesWithHolderElements(element.childNodes[i]);\n            // }\n        }\n\n    }\n\n\n    _isAAElement(element) {\n\n        if (AANodeNames.indexOf(element.nodeName) != -1) {\n            return true;\n        }\n        return false;\n    }\n\n    _isHolder(element) {\n        if (element.tagName == 'AA-HOLDER') {\n            return true;\n        }\n        return false;\n    }\n\n\n\n    _restoreHeldNodes(element) {\n\n        let childNodes = element.childNodes;\n        for (let i = 0; i < childNodes.length; i++) {\n            let child = childNodes[i];\n            if (this._isHolder(child)) {\n\n                //before restoring, strip element of ema- content\n                // this.analyzeChildNodesForElement(child.heldElement);\n                this._replaceHolderWithElement(child);\n            }\n            else if (child.childNodes.length > 0) {\n                this._restoreHeldNodes(child);\n            }\n        }\n    }\n\n\n    _replaceElementWithHolder(element) {\n\n\n        let holder = document.createElement(\"aa-holder\");\n        holder.id = element.getAttribute(\"name\") + \"-holder\";\n        holder.heldElementOuterHTML = element.outerHTML;\n\n        // holder.innerHTML = \"holder for \" + element.nodeName + \" with name \" + element.getAttribute(\"name\")\n        // console.log(\"replacing\", element, \"with\", holder);\n\n        holder.heldElement = element.cloneNode(false);\n        //holder.heldElement.innerFragment = document.createRange().createContextualFragment(element.innerHTML);\n        holder.heldElement.innerFragment = this._createFragmentForElement(element);\n\n        element.replaceWith(holder);\n        return holder;\n    }\n    _replaceHolderWithElement(holder) {\n\n        holder.replaceWith(holder.heldElement);\n        return holder.heldElement;\n    }\n\n    _createFragmentForElement(element) {\n\n        let fragment = document.createDocumentFragment();\n        //  first get references to the children,\n        //  because the element.children array will be modified as they are appended elsewhere\n        let childNodes = [];\n        for (let i = 0; i < element.childNodes.length; i++) {\n            childNodes.push(element.childNodes[i]);\n        }\n        // the append each child to the fragment\n        for (let i = 0; i < childNodes.length; i++) {\n            fragment.appendChild(childNodes[i])\n        }\n        return fragment;\n    }\n\n    _dispatchDebugEvent(detail) {\n        if (this.debug) {\n            this.dispatchEvent(new CustomEvent('debugEvent', { detail, bubbles:true }));\n        }\n    }\n\n    \n\n    _dispatchEndEvent(detail) {\n        this.dispatchEvent(new CustomEvent('endEvent', { bubbles: true, detail }));\n    }\n\n    _getParentSession(){\n        let _sessionElement = this;\n        while ((_sessionElement != null) && (_sessionElement.nodeName != 'AA-SESSION')) {\n            _sessionElement = _sessionElement.parentNode;\n        }\n        return _sessionElement;\n    }\n\n}\n\n\nif (!customElements.get('aa-base-element')) {\n    window.AANodeNames = window.AANodeNames || [];\n    window.AANodeNames.push('AA-BASE-ELEMENT');\n    customElements.define('aa-base-element', BaseElement);\n}\n\n\n//# sourceURL=webpack:///./src/aa-baseElement/baseElement.js?");

/***/ }),

/***/ "./src/aa-choose/aa-choose.js":
/*!************************************!*\
  !*** ./src/aa-choose/aa-choose.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAChoose; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n/* harmony import */ var _aa_when_aa_when_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aa-when/aa-when.js */ \"./src/aa-choose/aa-when/aa-when.js\");\n/* harmony import */ var _aa_otherwise_aa_otherwise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aa-otherwise/aa-otherwise.js */ \"./src/aa-choose/aa-otherwise/aa-otherwise.js\");\n/* harmony import */ var _lib_jsep_jsep_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./../lib/jsep/jsep.js */ \"./src/lib/jsep/jsep.js\");\n\n\n\n\n\n\nclass AAChoose extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = \"<slot></slot>\"\n\n    }\n\n    connectedCallback() {\n        this._shouldRun = (this.shouldRun === null) || (this.shouldRun === true);\n        this.sessionElement = this._getParentSession();\n        if (this.sessionElement) if (this.sessionElement.mem) this.mem = this.sessionElement.mem;\n\n        if (this.started) { return; }\n        if (this._shouldRun) {\n            if (typeof this.innerFragment !== 'undefined') {\n                this._replaceChildNodesWithHolderElements(this.innerFragment);\n                let nodes = this._getNodeToInstantiate();\n                if (nodes.length == 0) {\n                    this._dispatchEndEvent();\n                } else {\n                    for (let i = 0; i < nodes.length; i++) {\n                        let node = nodes[i];\n                        if (typeof node === 'undefined') {\n                            this._dispatchEndEvent();\n                        }\n                        else {\n                            this.appendChild(node);\n                            this._restoreHeldNodes(this);\n                        }\n                    }\n                }\n            }\n            else {\n                this._restoreHeldNodes(this);\n                if (this.childNodes.length == 0) {\n                    this._dispatchEndEvent();\n                }\n            }\n        }\n    }\n\n    _getNodeToInstantiate() {\n\n        this.started = true;\n        let nodesToReturn = [];\n        let nodeOtherwise = [];\n\n        this.myFragmentChildren = [];\n        let isChildTrue = false;\n        for (let i = 0; i < this.innerFragment.children.length; i++) {\n\n            let child = this.innerFragment.children[i];\n\n            this.myFragmentChildren.push(child)\n            if (this._isHolder(child)) {\n                if (child.heldElement.nodeName == 'AA-WHEN') {\n                    isChildTrue = this.evaluate(child.heldElement);\n                    if (isChildTrue) {\n                        nodesToReturn.push(child)\n                        // return child;\n                    };\n                }\n\n                if (child.heldElement.nodeName == 'AA-OTHERWISE') {\n                    //we reached otherwise, should we stop and attach it?\n                    // /return child;\n                    nodeOtherwise.push(child)\n                }\n            }\n        }\n\n        if (nodesToReturn.length == 0) {\n            return nodeOtherwise;\n        }\n        else {\n            return nodesToReturn;\n        }\n\n    }\n\n    run() {\n        this.started = true;\n        if (this.myFragmentChildren.length === 0) return;\n        if (this.fragmentChildrenCounter >= this.myFragmentChildren.length) return;\n        if (!this.currentNode) { this.formerNodes.push(this.currentNode); }\n\n        let finalFragmentChild;\n        let fragmentChild = this.myFragmentChildren[this.fragmentChildrenCounter];\n        if (this.isHolder(fragmentChild)) {\n            finalFragmentChild = this.replaceHolderWithElement(fragmentChild);\n        }\n        else {\n            finalFragmentChild = fragmentChild;\n        }\n        this.appendChild(finalFragmentChild);\n        this._restoreHeldNodes(finalFragmentChild);\n        this.fragmentChildrenCounter += 1;\n    }\n\n    evaluate(element) {\n\n        let test = element.getAttribute('test');\n        if ((test == null) || (test == '')) return null;\n        return this.evaluateTestExpression(test);\n        \n    }\n\n    evaluateTestExpression(test) {\n\n        let expr = this.replaceExpressionIdentifiersWithValues(test);\n        // after replacing known variable names with their values in the string, test to see if the expression can be parsed\n        try {\n            var parseTree = Object(_lib_jsep_jsep_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(test);\n            if ((parseTree.left.type == \"Literal\") && (parseTree.right.type == \"Literal\")) {\n                return eval(test);\n            } \n            else {\n              // there are still strings in the expression, which are unknown, an exception should be raised\n              throw \"unknown identifiers in expression : \" + expr;\n            }\n\n        } catch (e) {\n            console.error(\"parse error:\", e);\n        }\n\n    }\n\n\n    replaceExpressionIdentifiersWithValues(expression){\n        let session = this._getParentSession();\n         let result = expression.toUpperCase();\n        \n        let originalIdentifiers = Object.keys(session.getDataDump());\n        let upperCaseIdentifiers = originalIdentifiers.map(s=>s.toUpperCase());\n        for(let i in upperCaseIdentifiers)\n        {\n            let value = session.getData(originalIdentifiers[i]);\n            let finalValue = parseInt(value);\n            if(finalValue!=value) {\n                if(value===\"null\") { finalValue = `null`; }\n                else if(value===\"true\") {finalValue = \"true\";}\n                else if(value===\"false\") { finalValue = \"false\"}\n                else finalValue = `\"${value}\"`\n            }\n            let r = new RegExp(upperCaseIdentifiers[i], \"g\");\n            result = result.replace( r, finalValue );\n        }\n       return result;\n    }\n}\n\n\n\nif (!customElements.get('aa-choose')) {\n    window.AANodeNames = window.AANodeNames || [];\n    window.AANodeNames.push('AA-CHOOSE');\n    customElements.define('aa-choose', AAChoose);\n}\n\n\n//# sourceURL=webpack:///./src/aa-choose/aa-choose.js?");

/***/ }),

/***/ "./src/aa-choose/aa-otherwise/aa-otherwise.js":
/*!****************************************************!*\
  !*** ./src/aa-choose/aa-otherwise/aa-otherwise.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAOtherwise; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\n\nclass AAOtherwise extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    constructor() {\n        super();\n    }\n\n    connectedCallback() {\n        if (this.started) return;\n        this.started = true;\n        if (typeof this.innerFragment != \"undefined\") {\n            this._replaceChildNodesWithHolderElements(this.innerFragment);\n            this.appendChild(this.innerFragment);\n            this._restoreHeldNodes(this);\n        }\n     \n    }\n}\n\nif (!customElements.get('aa-otherwise')) {\n    window.AANodeNames = window.AANodeNames|| []; \n    window.AANodeNames.push('AA-OTHERWISE');\n    customElements.define('aa-otherwise', AAOtherwise);\n}\n\n//# sourceURL=webpack:///./src/aa-choose/aa-otherwise/aa-otherwise.js?");

/***/ }),

/***/ "./src/aa-choose/aa-when/aa-when.js":
/*!******************************************!*\
  !*** ./src/aa-choose/aa-when/aa-when.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAWhen; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\n\nclass AAWhen extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n    constructor(){\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = '<slot></slot>'\n    }\n    \n    connectedCallback(){\n        if(this.started) return;\n        this.started = true;\n        if(typeof this.innerFragment!=\"undefined\")\n        {\n            this._replaceChildNodesWithHolderElements(this.innerFragment);\n            this.appendChild(this.innerFragment);\n            this._restoreHeldNodes(this);\n        }\n    }\n}\n\n\n\nif (!customElements.get('aa-when')) {\n    window.AANodeNames = window.AANodeNames|| []; \n    window.AANodeNames.push(\"AA-WHEN\");\n    customElements.define('aa-when', AAWhen);\n}\n\n\n//# sourceURL=webpack:///./src/aa-choose/aa-when/aa-when.js?");

/***/ }),

/***/ "./src/aa-holder/aa-holder.js":
/*!************************************!*\
  !*** ./src/aa-holder/aa-holder.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAHolder; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\nclass AAHolder extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n\n    constructor() {\n        super();\n        this._templateHolders = [];\n    }\n\n\n    get css() {\n        return html`\n            <style>\n            \n            </style>\n        `\n    }\n\n    get html() {\n        return html`\n            <slot>\n            </slot>\n\n            <pre id=\"display\" class=\"prettyprint lang-html\" hidden >\n\n            </pre>\n        `\n    }\n\n\n\n\n\n\n\n    connectedCallback() {\n    }\n\n    display() {\n        // console.log(\"display on\", this);\n        this.$.display.hidden = false;\n\n        // console.log(\"outerhtml is\", this.heldElement.outerHTML);\n        this.$.display.innerText = this.heldElementOuterHTML;\n        debugger;\n    }\n\n}\n\n\nif (!customElements.get('aa-holder')) {\n    window.AANodeNames = window.AANodeNames|| []; \n    window.AANodeNames.push('AA-HOLDER');\n    customElements.define('aa-holder', AAHolder);\n}\n\n\n//# sourceURL=webpack:///./src/aa-holder/aa-holder.js?");

/***/ }),

/***/ "./src/aa-memory/aa-memory.js":
/*!************************************!*\
  !*** ./src/aa-memory/aa-memory.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAMemory; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\n\n\n\nclass AAMemory extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n    get observedAttributes(){\n        return [\"name\"];\n    }\n\n    constructor(){\n        super();\n    }\n\n    connectedCallback(){\n        \n    }\n\n    setData(name,value){\n        this.dataset[name] = value;\n    }\n\n    getData(name){\n        return this.dataset[this.toHyphenated(name)];\n    }\n}\n\n\nif (!customElements.get('aa-memory')) {\n\n    if (typeof window.AANodeNames ===\"undefined\") { \n        window.AANodeNames = []; \n    }\n    window.AANodeNames.push(\"AA-MEMORY\");\n    customElements.define('aa-memory', AAMemory);\n}\n\n//# sourceURL=webpack:///./src/aa-memory/aa-memory.js?");

/***/ }),

/***/ "./src/aa-screen/aa-screen.js":
/*!************************************!*\
  !*** ./src/aa-screen/aa-screen.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAScreen; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\n\n\nclass AAScreen extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n\n\n    static get observedAttributes() { \n        return [\n            'submit-button-text',\n            'submit-button-hidden',\n            'name'\n        ];\n    }\n\n    constructor() {        \n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n        this.submitButtonText = this._submitButtonText || 'submit';\n        this.root.innerHTML = this.css + this.html;\n\n        if (this._started) { return; }\n        this._started = true;\n\n        if (this.submitButtonHidden) {\n            this.root.querySelector('.submitButtonContainer').style.display = 'none';\n        }\n\n\n        if (typeof this.innerFragment != 'undefined') {\n            this._replaceChildNodesWithHolderElements(this.innerFragment);\n            this.appendChild(this.innerFragment);\n            this._restoreHeldNodes(this);\n        }\n\n        this.root.querySelector('.submitButton').addEventListener('click', this.submitButtonClick.bind(this));\n\n    }\n\n\n    get css() {\n\n        return html`\n            <style>\n                :host {\n                    display: block;\n                    height: fit-content;\n                    border: solid thin;\n                }\n\n                .submitButtonContainer{\n                    display:flex; \n                    justify-content: space-between; \n                    align-items:center;\n                }\n            \n            </style>\n        `;\n    }\n\n    get html() {\n\n        return html`\n            <slot></slot>\n            hey\n            <div class='submitButtonContainer'>\n                <div>\n                    <button class='submitButton'> button: ${this.submitButtonText}</button>\n                </div>\n                <div id='userMessage'></div>\n            </div>\n        \n        `\n    }\n\n\n\n\n    attributeChangedCallback() {\n\n    }\n\n\n\n\n    hasChildrenThatDemandResponse() {\n\n        let emaChildren = this.getEmaChildren(this);\n        let result = false;\n        for (let i = 0; i < emaChildren.length; i++) {\n            let child = emaChildren[i];\n            if (child.demandsResponse) {\n                if (child.getValue() == null) {\n                    // console.log(child, 'demands response');\n\n                    if (child.displayAttention) {\n                        child.displayAttention();\n                    }\n\n                    result = true;\n                }\n            }\n        }\n        if (result) {\n            this.userMessage.innerHTML = `<div style=\"display:flex; align-items:center\"> <div>please fill out the required fields</div> <div id=\"attention\" style=\"color: red; font-size: 20px;  border: solid thin; border-radius: 50%; width: 20px;\n                                            margin-left:20px; height: 20px; \n                                            text-align: center;\n                                            padding: 5px;\">!</div></div>`\n            this.userMessage.style.color = 'red';\n        }\n        return result;\n    }\n\n\n    submitButtonClick(e) {\n\n\n\n\n        this.$.userMessage.innerHTML = '';\n\n        if (this.hasChildrenThatDemandResponse()) {\n            return;\n        }\n\n        //dispatch endEvent \n        let valueSubmitEvent = new CustomEvent('valueSubmit', { bubbles: true, detail: { value: this.getValue() } });\n        this.dispatchEvent(valueSubmitEvent);\n\n        this._dispatchEndEvent(this.getValue());\n        \n\n        if (typeof e.detail.callback != 'undefined') {\n            e.detail.callback(e);\n        }\n\n\n        //hide the screen\n\n        if (this.dontHide == false) this.hide();\n\n    }\n\n\n    getChildrenValuesOrder(element) {\n        if (typeof element === 'undefined') element = this;\n        var emaChildren = this.getEmaChildren(element);\n        var result = [];\n        for (var i = 0; i < emaChildren.length; i++) {\n            var child = emaChildren[i]\n            if (typeof this.name != 'undefined') {\n                result.push(this.name + '$' + child.getName());\n            }\n            else {\n                result.push(child.getName());\n            }\n        }\n    }\n\n\n\n    getValue() {\n        var __meta = {\n            attachedTimestamp: this.attachedTimestamp,\n            submitTimestamp: new Date().getTime()\n        }\n        var result = this.getChildrenValues(this);\n        return result;\n    }\n\n    getValueWithKey() {\n        var result = {}\n        result[this.name] = this.getValue();\n        return result;\n    }\n\n\n    automate() {\n        for (var i = 0; i < this.children.length; i++) {\n            if (this.isEmaElement(this.children[i])) {\n                if (typeof this.children[i].automate != 'undefined') {\n                    this.children[i].automate();\n                }\n            }\n        }\n        this.submitButtonClick();\n    }\n\n\n    hide() {\n        this.style.display = 'none'\n\n    }\n\n    show() {\n        this.style.display = 'block'\n        //this.removeAttribute('hidden');\n    }\n\n\n}\n\n\nif (!customElements.get('aa-screen')) {\n    window.AANodeNames = window.AANodeNames || [];\n    window.AANodeNames.push('AA-SCREEN');\n    customElements.define('aa-screen', AAScreen);\n}\n\n\n//# sourceURL=webpack:///./src/aa-screen/aa-screen.js?");

/***/ }),

/***/ "./src/aa-sequence/aa-sequence.js":
/*!****************************************!*\
  !*** ./src/aa-sequence/aa-sequence.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AASequence; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\n\nclass AASequence extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n        this.root.innerHTML = '<slot></slot>';\n    }\n    connectedCallback() {\n        \n\n        \n        if (this.id === '') console.warn(this, 'has no id');\n       \n        // console.log('ready sequence', this.name);\n        this.started = false;\n\n\n        // console.log('attached sequence');\n        if (this.displayAll) {\n\n            //if(typeof this.innerFragment=='undefined')\n            {\n                // console.warn('.innerFragment is undefined');\n                this.restoreHeldNodes(this)\n            }\n            return;\n        }\n\n        if ( (this.shouldRun===null)||(this.shouldRun===true)) {\n\n            this.start()\n        };\n\n\n\n    }\n\n\n    get css() {\n        return html`\n            <style>\n                :host {\n                    display: block;\n                }\n            </style>\n        `\n    }\n\n    get html() {\n        return html`\n            <slot></slot>\n            <button id='nextButton' hidden></button>\n        `\n    \n    }\n\n\n\n\n    properties() {\n\n        return {\n            shouldRun: {\n                type: Boolean,\n                value: true,\n                reflectToAttribute: false,\n                reflectToConfig: false\n            },\n\n            showNextButton: {\n                type: Boolean,\n                value: false\n            },\n\n            nextKeyCode: {\n                type: Number,\n                value: 0\n            },\n\n            prevKeyCode: {\n                type: Number,\n                value: 0\n            },\n\n            displayAll: {\n                type: Boolean,\n                value: false\n            }\n        }\n    }\n\n\n\n\n\n\n\n\n    start() {\n       \n        if (this.started) return;\n        //  an  .innerFragment member should have been supplied by an ema-session element containing this ema-sequence\n        //  somewhere in its subtree. pick each child of the fragment separately\n        if (typeof this.innerFragment ==='undefined') {\n            console.warn('.innerFragment is undefined');\n            this.restoreHeldNodes(this)\n            return;\n        }\n        else {\n\n        }\n        //  first  replace any nested <ema-*> elements\n        this._replaceChildNodesWithHolderElements(this.innerFragment);\n        //this.replaceEmaChildNodesWithHolders(this.innerFragment);\n\n\n        this.started = true;\n        this.fragmentChildrenCounter = 0;\n        this.formerNodes = [];\n        this.myFragmentChildren = [];\n\n        //  don't assign listeners here, only to the final fragment child\n        for (let i = 0; i < this.innerFragment.children.length; i++) {\n\n            this.myFragmentChildren.push(this.innerFragment.children[i])\n            this.innerFragment.children[i].endEventListener = this.endEventListener.bind(this);\n        }\n\n        this.next();\n\n        if (this.nextKeyCode) {\n            this.addEventListener('keyup', function (e) {\n\n            })\n        }\n    }\n\n    next() {\n        if (!this.started) { \n            this.start(); \n        }\n        \n        if (this.myFragmentChildren.length === 0) return;\n        // console.log(this.fragmentChildrenCounter);\n        if (this.fragmentChildrenCounter >= this.myFragmentChildren.length) return null;\n\n        if (typeof this.currentNode != 'undefined') this.formerNodes.push(this.currentNode);\n        let fragmentChild = this.myFragmentChildren[this.fragmentChildrenCounter];\n\n        let finalFragmentChild;\n        if (this._isHolder(fragmentChild)) {\n            finalFragmentChild = this._replaceHolderWithElement(fragmentChild);\n        }\n        else {\n\n            finalFragmentChild = fragmentChild;\n\n        }\n\n\n\n        if (typeof this.currentNode != 'undefined') {\n\n            this.currentNode.removeEventListener('endEvent', this.currentNode.endEventListener);\n        }\n\n        //  update the current node\n\n\n\n        this.currentNode = finalFragmentChild;\n        this.currentNode.endEventListener = this.endEventListener.bind(this);\n        this.fragmentChildrenCounter += 1;\n        //  it's important that the listener is added and the fragmentChildrenCounter increase\n        //  before appending the child, otherwise, because appending nodes triggers their attached callback,\n        //  certain nodes (like ema-choose that fails to be true in any condition)\n        //  will immediately dispatch an 'endEvent'Event which in this case will call next()\n        //  again, before the current next() returns.\n        //  If the listener has not been added, no one will catch the event\n        //  and if fragmentChildrenCounter has not increased,\n        //  next() will grab the same object again from this.myFragmentChildren\n\n        this.currentNode.addEventListener('endEvent', this.currentNode.endEventListener);\n\n\n        this.appendChild(finalFragmentChild);\n        this._restoreHeldNodes(finalFragmentChild);\n\n\n\n        return finalFragmentChild;\n\n    }\n\n\n    endEventListener(e) {\n\n        e.stopPropagation();\n        let next = this.next();\n        if (next === null) {\n            this._dispatchEndEvent();\n        }\n    }\n\n}\n\n\n\nif (!customElements.get('aa-sequence')) {\n\n    if (typeof window.AANodeNames ==='undefined') { window.AANodeNames = []; }\n    window.AANodeNames.push('AA-SEQUENCE');\n\n    customElements.define('aa-sequence', AASequence);\n\n\n}\n\n\n\n//# sourceURL=webpack:///./src/aa-sequence/aa-sequence.js?");

/***/ }),

/***/ "./src/aa-session/aa-session.js":
/*!**************************************!*\
  !*** ./src/aa-session/aa-session.js ***!
  \**************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AASession; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n/* harmony import */ var _aa_holder_aa_holder_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../aa-holder/aa-holder.js */ \"./src/aa-holder/aa-holder.js\");\n/* harmony import */ var _aa_memory_aa_memory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../aa-memory/aa-memory.js */ \"./src/aa-memory/aa-memory.js\");\n\n\n\n\nclass AASession extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n\n    static get observedAttributes() {\n        return ['name', 'should-run', 'debug'];\n    }\n\n\n    constructor() {\n        super();\n        // console.log('creating session');\n\n        this._mem = document.createElement('aa-memory');\n\n        this.myTemplate = document.createElement('template');\n        this.myTemplate.innerHTML = this.innerHTML;\n        this.innerHTML = '';\n\n        // this.root = this.attachShadow({ mode: 'closed' });\n        // this.root.innerHTML = '<template><slot></slot></template>'\n\n        this.addEventListener('valueSubmit', (e) => {\n\n\n            // e.stopPropagation();\n            let input = {\n                data: e.detail.value,\n                sessionID: this.sessionID,\n                sessionTimestamp: this.sessionTime,\n                sessionName: this.name,\n                variables: Object.keys(e.detail.value),\n            };\n            this._mem.saveReplyValue(e.detail.value, false);\n\n\n            let inputSubmitEvent = new CustomEvent('inputSubmit', { bubbles: true, detail: { input } });\n            this.dispatchEvent(inputSubmitEvent);\n            //  ema-participant-client needs to catch this and either send it to the server,\n            //  or store it locally if we are offline\n            //  A reason that ema-participant-client needs to do this, is because it cares\n            //  about identification tokens\n\n\n        })\n\n        this.addEventListener('endEvent', (e) => {\n            if(!this.debug) e.stopPropagation();\n            let sessionEndEvent = new CustomEvent('sessionEndEvent', { bubbles: true, detail: 'sessionEnd' });\n            this.dispatchEvent(sessionEndEvent);\n        })\n\n\n\n    }\n\n    myIdGenerator() {\n        // debugger;\n        // TODO: generate an id\n        return 0;\n    }\n\n\n\n\n    connectedCallback() {\n\n        // console.log('attaching session');\n        this.sessionID = this.myIdGenerator();\n        this.sessionTime = new Date().getTime();\n\n        let sessionDatum = Object.keys(this.dataset);\n        for(let i in sessionDatum){\n            this.setData(sessionDatum[i], this.dataset[sessionDatum[i]]);\n        }\n        // console.log('shouldRun = ', this.shouldRun);\n        if ((this.shouldRun === null) || (this.shouldRun === true)) {\n            this.run();\n        }\n\n\n    }\n\n    getElementContent(element) {\n        if (element.nodeName === 'SCRIPT') {\n\n        } else\n            if (element.nodeName === '#text') {\n                return element.textContent;\n            } else\n                if (element.nodeName === '#comment') {\n\n                    return '<!--' + element.textContent + '!-->';\n                } else\n                    if (element.nodeName === 'TEMPLATE') {\n                        return this.getElementContent(element.content);\n                    } else\n                        if (element.nodeName === '#document-fragment') {\n                            let result = '';\n                            for (let i = 0; i < element.childNodes.length; i++) {\n                                result += this.getElementContent(element.childNodes[i]);\n                            }\n                            // console.log('result is ', result)\n                            return result;\n                        }\n                        else {\n                            return element.outerHTML;\n                        }\n\n    }\n\n\n    display() {\n\n        this.display = this.querySelector('#display');\n        this.initialNodesList = [];\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.initialNodesList.push(this.childNodes[i]);\n        }\n        this.sourceText = '';\n        for (let i = 0; i < this.initialNodesList.length; i++) {\n            let child = this.initialNodesList[i];\n            this.sourceText += this.getElementContent(child);\n        }\n        this.display.innerHTML = hljs.highlightAuto(this.sourceText).value;\n\n        // this.$.display.innerHTML = Prism.highlight(sourceText, Prism.languages.javascript)\n\n        this.display.addEventListener('input', (e) => {\n            // this.sourceText = hljs.highlightAuto(this.target.innerText).value;\n            // this.display.innerHTML = this.sourceText\n            // console.log('change')\n        })\n\n        this.$.updateButton.addEventListener('click', () => {\n            this.updateFromEditor();\n        });\n\n    }\n\n    updateFromEditor() {\n\n        let t = document.createElement('template');\n        t.innerHTML = this.sourceText;\n        let session = document.createElement('aa-session');\n        session.shouldRun = true;\n        session.appendChild(t);\n        this.appendChild(session)\n    }\n\n\n\n\n\n\n\n    run() {\n\n        this.started = true;\n\n        this.templateHolders = [];\n        this.holderList = [];\n        this.nodesToAppendAfterChild = [];\n\n\n\n\n        this.referencedItems = this.getReferencedItems(this);\n\n\n\n        this._replaceChildNodesWithHolderElements(this.myTemplate.content);\n        this.appendChild(this.myTemplate.content);\n\n        if ((this.shouldRun === null) || (this.shouldRun === true)) {\n            this._restoreHeldNodes(this);\n        }\n\n\n        this.initialChildNodesList = [];\n\n\n        for (let i = 0; i < this.childNodes.length; i++) {\n            this.initialChildNodesList.push(this.childNodes[i]);\n        }\n        for (let i = 0; i < this.initialChildNodesList.length; i++) {\n            let child = this.initialChildNodesList[i];\n\n\n            if (typeof child.nodeName != 'undefined') {\n                // console.log(child.nodeName);\n                if (child.nodeName === 'TEMPLATE') {\n\n\n                    this._replaceChildNodesWithHolderElements(child.content);\n                    this.appendChild(child.content);\n\n                    if ((this.shouldRun === null) || (this.shouldRun === true)) {\n                        this._restoreHeldNodes(this);\n                    }\n\n                }\n            }\n\n        }\n\n\n    }\n\n\n\n\n    getReferencedItems(element) {\n\n        let referencedItems = [];\n        if (this._isAAElement(element)) referencedItems.push(element);\n        for (let i = 0; i < element.childNodes.length; i++) {\n            let child = element.childNodes[i];\n            if (this._isAAElement(child)) {\n                referencedItems = referencedItems.concat(this.getReferencedItems(child))\n            }\n        }\n        return referencedItems;\n    }\n\n    getData(name){\n        return this._mem.getData(name);\n    }\n    setData(name, value){\n        return this._mem.setData(name, value);\n    }\n\n    getDataDump(){\n        return this._mem.dataset;\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n}\n\n\n\n\nif (!customElements.get('aa-session')) {\n    window.AANodeNames = window.AANodeNames|| []; \n    window.AANodeNames.push('AA-SESSION');\n    customElements.define('aa-session', AASession);\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/aa-session/aa-session.js?");

/***/ }),

/***/ "./src/aa-variable/aa-variable.js":
/*!****************************************!*\
  !*** ./src/aa-variable/aa-variable.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return AAVariable; });\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n\nclass AAVariable extends _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n\n\n    static get observedAttributes() {\n        return [\n            'name',\n            'value'\n        ];\n    }\n    constructor() {\n        super();\n        this.root = this.attachShadow({ mode: 'open' });\n    }\n\n    connectedCallback(){\n        let session = this._getParentSession();\n        session.setData(this.name, this.value);\n    };\n\n\n}\n\n\nif (!customElements.get('aa-variable')) {\n    window.AANodeNames = window.AANodeNames|| []; \n    window.AANodeNames.push('AA-VARIABLE');\n    customElements.define('aa-variable', AAVariable);\n}\n\n\n//# sourceURL=webpack:///./src/aa-variable/aa-variable.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./aa-baseElement/baseElement.js */ \"./src/aa-baseElement/baseElement.js\");\n/* harmony import */ var _aa_choose_aa_choose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aa-choose/aa-choose.js */ \"./src/aa-choose/aa-choose.js\");\n/* harmony import */ var _aa_holder_aa_holder_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aa-holder/aa-holder.js */ \"./src/aa-holder/aa-holder.js\");\n/* harmony import */ var _aa_memory_aa_memory_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aa-memory/aa-memory.js */ \"./src/aa-memory/aa-memory.js\");\n/* harmony import */ var _aa_screen_aa_screen_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./aa-screen/aa-screen.js */ \"./src/aa-screen/aa-screen.js\");\n/* harmony import */ var _aa_sequence_aa_sequence_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./aa-sequence/aa-sequence.js */ \"./src/aa-sequence/aa-sequence.js\");\n/* harmony import */ var _aa_session_aa_session_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./aa-session/aa-session.js */ \"./src/aa-session/aa-session.js\");\n/* harmony import */ var _aa_variable_aa_variable_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./aa-variable/aa-variable.js */ \"./src/aa-variable/aa-variable.js\");\n\n\n\n\n\n\n\n\n\n\nconsole.log(0.0.1);\n\nlet aaCustomElements = {\n    BaseElement: _aa_baseElement_baseElement_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"],\n    AAChoose: _aa_choose_aa_choose_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n    AAMemory: _aa_memory_aa_memory_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"],\n    AAScreen: _aa_screen_aa_screen_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n    AASequence: _aa_sequence_aa_sequence_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    AASession: _aa_session_aa_session_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"],\n    AAVariable: _aa_variable_aa_variable_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"],\n    AAHolder: _aa_holder_aa_holder_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n    __VERSION: 0.0.1,\n    __BUILD_NUMBER: 5,\n    // __BUILD_BRANCH:BUILD_BRANCH,\n    // __BUILD_STRING: BUILD_STRING\n\n}\n\nif(window){\n    window.aaCustomElements = aaCustomElements\n}\n// export default aaCustomElements;\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/lib/jsep/jsep.js":
/*!******************************!*\
  !*** ./src/lib/jsep/jsep.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/**\r\n * this is a modified version of the original jsep \r\n * which if the root parameter is undefined,\r\n * the jsep object returned so as to be exported   \r\n **/ \r\n\r\n\r\n//     JavaScript Expression Parser (JSEP) 0.3.4\r\n//     JSEP may be freely distributed under the MIT License\r\n//     http://jsep.from.so/\r\n\r\n/*global module: true, exports: true, console: true */\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (root) {\r\n\t'use strict';\r\n\t// Node Types\r\n\t// ----------\r\n\t\r\n\t// This is the full set of types that any JSEP node can be.\r\n\t// Store them here to save space when minified\r\n\tvar COMPOUND = 'Compound',\r\n\t\tIDENTIFIER = 'Identifier',\r\n\t\tMEMBER_EXP = 'MemberExpression',\r\n\t\tLITERAL = 'Literal',\r\n\t\tTHIS_EXP = 'ThisExpression',\r\n\t\tCALL_EXP = 'CallExpression',\r\n\t\tUNARY_EXP = 'UnaryExpression',\r\n\t\tBINARY_EXP = 'BinaryExpression',\r\n\t\tLOGICAL_EXP = 'LogicalExpression',\r\n\t\tCONDITIONAL_EXP = 'ConditionalExpression',\r\n\t\tARRAY_EXP = 'ArrayExpression',\r\n\r\n\t\tPERIOD_CODE = 46, // '.'\r\n\t\tCOMMA_CODE  = 44, // ','\r\n\t\tSQUOTE_CODE = 39, // single quote\r\n\t\tDQUOTE_CODE = 34, // double quotes\r\n\t\tOPAREN_CODE = 40, // (\r\n\t\tCPAREN_CODE = 41, // )\r\n\t\tOBRACK_CODE = 91, // [\r\n\t\tCBRACK_CODE = 93, // ]\r\n\t\tQUMARK_CODE = 63, // ?\r\n\t\tSEMCOL_CODE = 59, // ;\r\n\t\tCOLON_CODE  = 58, // :\r\n\r\n\t\tthrowError = function(message, index) {\r\n\t\t\tvar error = new Error(message + ' at character ' + index);\r\n\t\t\terror.index = index;\r\n\t\t\terror.description = message;\r\n\t\t\tthrow error;\r\n\t\t},\r\n\r\n\t// Operations\r\n\t// ----------\r\n\r\n\t// Set `t` to `true` to save space (when minified, not gzipped)\r\n\t\tt = true,\r\n\t// Use a quickly-accessible map to store all of the unary operators\r\n\t// Values are set to `true` (it really doesn't matter)\r\n\t\tunary_ops = {'-': t, '!': t, '~': t, '+': t},\r\n\t// Also use a map for the binary operations but set their values to their\r\n\t// binary precedence for quick reference:\r\n\t// see [Order of operations](http://en.wikipedia.org/wiki/Order_of_operations#Programming_language)\r\n\t\tbinary_ops = {\r\n\t\t\t'||': 1, '&&': 2, '|': 3,  '^': 4,  '&': 5,\r\n\t\t\t'==': 6, '!=': 6, '===': 6, '!==': 6,\r\n\t\t\t'<': 7,  '>': 7,  '<=': 7,  '>=': 7,\r\n\t\t\t'<<':8,  '>>': 8, '>>>': 8,\r\n\t\t\t'+': 9, '-': 9,\r\n\t\t\t'*': 10, '/': 10, '%': 10\r\n\t\t},\r\n\t// Get return the longest key length of any object\r\n\t\tgetMaxKeyLen = function(obj) {\r\n\t\t\tvar max_len = 0, len;\r\n\t\t\tfor(var key in obj) {\r\n\t\t\t\tif((len = key.length) > max_len && obj.hasOwnProperty(key)) {\r\n\t\t\t\t\tmax_len = len;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn max_len;\r\n\t\t},\r\n\t\tmax_unop_len = getMaxKeyLen(unary_ops),\r\n\t\tmax_binop_len = getMaxKeyLen(binary_ops),\r\n\t// Literals\r\n\t// ----------\r\n\t// Store the values to return for the various literals we may encounter\r\n\t\tliterals = {\r\n\t\t\t'true': true,\r\n\t\t\t'false': false,\r\n\t\t\t'null': null\r\n\t\t},\r\n\t// Except for `this`, which is special. This could be changed to something like `'self'` as well\r\n\t\tthis_str = 'this',\r\n\t// Returns the precedence of a binary operator or `0` if it isn't a binary operator\r\n\t\tbinaryPrecedence = function(op_val) {\r\n\t\t\treturn binary_ops[op_val] || 0;\r\n\t\t},\r\n\t// Utility function (gets called from multiple places)\r\n\t// Also note that `a && b` and `a || b` are *logical* expressions, not binary expressions\r\n\t\tcreateBinaryExpression = function (operator, left, right) {\r\n\t\t\tvar type = (operator === '||' || operator === '&&') ? LOGICAL_EXP : BINARY_EXP;\r\n\t\t\treturn {\r\n\t\t\t\ttype: type,\r\n\t\t\t\toperator: operator,\r\n\t\t\t\tleft: left,\r\n\t\t\t\tright: right\r\n\t\t\t};\r\n\t\t},\r\n\t\t// `ch` is a character code in the next three functions\r\n\t\tisDecimalDigit = function(ch) {\r\n\t\t\treturn (ch >= 48 && ch <= 57); // 0...9\r\n\t\t},\r\n\t\tisIdentifierStart = function(ch) {\r\n\t\t\treturn (ch === 36) || (ch === 95) || // `$` and `_`\r\n\t\t\t\t\t(ch >= 65 && ch <= 90) || // A...Z\r\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\r\n                    (ch >= 128 && !binary_ops[String.fromCharCode(ch)]); // any non-ASCII that is not an operator\r\n\t\t},\r\n\t\tisIdentifierPart = function(ch) {\r\n\t\t\treturn (ch === 36) || (ch === 95) || // `$` and `_`\r\n\t\t\t\t\t(ch >= 65 && ch <= 90) || // A...Z\r\n\t\t\t\t\t(ch >= 97 && ch <= 122) || // a...z\r\n\t\t\t\t\t(ch >= 48 && ch <= 57) || // 0...9\r\n                    (ch >= 128 && !binary_ops[String.fromCharCode(ch)]); // any non-ASCII that is not an operator\r\n\t\t},\r\n\r\n\t\t// Parsing\r\n\t\t// -------\r\n\t\t// `expr` is a string with the passed in expression\r\n\t\tjsep = function(expr) {\r\n\t\t\t// `index` stores the character number we are currently at while `length` is a constant\r\n\t\t\t// All of the gobbles below will modify `index` as we move along\r\n\t\t\tvar index = 0,\r\n\t\t\t\tcharAtFunc = expr.charAt,\r\n\t\t\t\tcharCodeAtFunc = expr.charCodeAt,\r\n\t\t\t\texprI = function(i) { return charAtFunc.call(expr, i); },\r\n\t\t\t\texprICode = function(i) { return charCodeAtFunc.call(expr, i); },\r\n\t\t\t\tlength = expr.length,\r\n\r\n\t\t\t\t// Push `index` up to the next non-space character\r\n\t\t\t\tgobbleSpaces = function() {\r\n\t\t\t\t\tvar ch = exprICode(index);\r\n\t\t\t\t\t// space or tab\r\n\t\t\t\t\twhile(ch === 32 || ch === 9 || ch === 10 || ch === 13) {\r\n\t\t\t\t\t\tch = exprICode(++index);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// The main parsing function. Much of this code is dedicated to ternary expressions\r\n\t\t\t\tgobbleExpression = function() {\r\n\t\t\t\t\tvar test = gobbleBinaryExpression(),\r\n\t\t\t\t\t\tconsequent, alternate;\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tif(exprICode(index) === QUMARK_CODE) {\r\n\t\t\t\t\t\t// Ternary expression: test ? consequent : alternate\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tconsequent = gobbleExpression();\r\n\t\t\t\t\t\tif(!consequent) {\r\n\t\t\t\t\t\t\tthrowError('Expected expression', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tif(exprICode(index) === COLON_CODE) {\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\talternate = gobbleExpression();\r\n\t\t\t\t\t\t\tif(!alternate) {\r\n\t\t\t\t\t\t\t\tthrowError('Expected expression', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: CONDITIONAL_EXP,\r\n\t\t\t\t\t\t\t\ttest: test,\r\n\t\t\t\t\t\t\t\tconsequent: consequent,\r\n\t\t\t\t\t\t\t\talternate: alternate\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrowError('Expected :', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn test;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Search for the operation portion of the string (e.g. `+`, `===`)\r\n\t\t\t\t// Start by taking the longest possible binary operations (3 characters: `===`, `!==`, `>>>`)\r\n\t\t\t\t// and move down from 3 to 2 to 1 character until a matching binary operation is found\r\n\t\t\t\t// then, return that binary operation\r\n\t\t\t\tgobbleBinaryOp = function() {\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tvar biop, to_check = expr.substr(index, max_binop_len), tc_len = to_check.length;\r\n\t\t\t\t\twhile(tc_len > 0) {\r\n\t\t\t\t\t\t// Don't accept a binary op when it is an identifier.\r\n\t\t\t\t\t\t// Binary ops that start with a identifier-valid character must be followed\r\n\t\t\t\t\t\t// by a non identifier-part valid character\r\n\t\t\t\t\t\tif(binary_ops.hasOwnProperty(to_check) && (\r\n\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\r\n\t\t\t\t\t\t\t(index+to_check.length< expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\r\n\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\tindex += tc_len;\r\n\t\t\t\t\t\t\treturn to_check;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// This function is responsible for gobbling an individual expression,\r\n\t\t\t\t// e.g. `1`, `1+2`, `a+(b*2)-Math.sqrt(2)`\r\n\t\t\t\tgobbleBinaryExpression = function() {\r\n\t\t\t\t\tvar ch_i, node, biop, prec, stack, biop_info, left, right, i;\r\n\r\n\t\t\t\t\t// First, try to get the leftmost thing\r\n\t\t\t\t\t// Then, check to see if there's a binary operator operating on that leftmost thing\r\n\t\t\t\t\tleft = gobbleToken();\r\n\t\t\t\t\tbiop = gobbleBinaryOp();\r\n\r\n\t\t\t\t\t// If there wasn't a binary operator, just return the leftmost node\r\n\t\t\t\t\tif(!biop) {\r\n\t\t\t\t\t\treturn left;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Otherwise, we need to start a stack to properly place the binary operations in their\r\n\t\t\t\t\t// precedence structure\r\n\t\t\t\t\tbiop_info = { value: biop, prec: binaryPrecedence(biop)};\r\n\r\n\t\t\t\t\tright = gobbleToken();\r\n\t\t\t\t\tif(!right) {\r\n\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack = [left, biop_info, right];\r\n\r\n\t\t\t\t\t// Properly deal with precedence using [recursive descent](http://www.engr.mun.ca/~theo/Misc/exp_parsing.htm)\r\n\t\t\t\t\twhile((biop = gobbleBinaryOp())) {\r\n\t\t\t\t\t\tprec = binaryPrecedence(biop);\r\n\r\n\t\t\t\t\t\tif(prec === 0) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbiop_info = { value: biop, prec: prec };\r\n\r\n\t\t\t\t\t\t// Reduce: make a binary expression from the three topmost entries.\r\n\t\t\t\t\t\twhile ((stack.length > 2) && (prec <= stack[stack.length - 2].prec)) {\r\n\t\t\t\t\t\t\tright = stack.pop();\r\n\t\t\t\t\t\t\tbiop = stack.pop().value;\r\n\t\t\t\t\t\t\tleft = stack.pop();\r\n\t\t\t\t\t\t\tnode = createBinaryExpression(biop, left, right);\r\n\t\t\t\t\t\t\tstack.push(node);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnode = gobbleToken();\r\n\t\t\t\t\t\tif(!node) {\r\n\t\t\t\t\t\t\tthrowError(\"Expected expression after \" + biop, index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tstack.push(biop_info, node);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ti = stack.length - 1;\r\n\t\t\t\t\tnode = stack[i];\r\n\t\t\t\t\twhile(i > 1) {\r\n\t\t\t\t\t\tnode = createBinaryExpression(stack[i - 1].value, stack[i - 2], node);\r\n\t\t\t\t\t\ti -= 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// An individual part of a binary expression:\r\n\t\t\t\t// e.g. `foo.bar(baz)`, `1`, `\"abc\"`, `(a % 2)` (because it's in parenthesis)\r\n\t\t\t\tgobbleToken = function() {\r\n\t\t\t\t\tvar ch, to_check, tc_len;\r\n\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tch = exprICode(index);\r\n\r\n\t\t\t\t\tif(isDecimalDigit(ch) || ch === PERIOD_CODE) {\r\n\t\t\t\t\t\t// Char code 46 is a dot `.` which can start off a numeric literal\r\n\t\t\t\t\t\treturn gobbleNumericLiteral();\r\n\t\t\t\t\t} else if(ch === SQUOTE_CODE || ch === DQUOTE_CODE) {\r\n\t\t\t\t\t\t// Single or double quotes\r\n\t\t\t\t\t\treturn gobbleStringLiteral();\r\n\t\t\t\t\t} else if (ch === OBRACK_CODE) {\r\n\t\t\t\t\t\treturn gobbleArray();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tto_check = expr.substr(index, max_unop_len);\r\n\t\t\t\t\t\ttc_len = to_check.length;\r\n\t\t\t\t\t\twhile(tc_len > 0) {\r\n\t\t\t\t\t\t// Don't accept an unary op when it is an identifier.\r\n\t\t\t\t\t\t// Unary ops that start with a identifier-valid character must be followed\r\n\t\t\t\t\t\t// by a non identifier-part valid character\r\n\t\t\t\t\t\t\tif(unary_ops.hasOwnProperty(to_check) && (\r\n\t\t\t\t\t\t\t\t!isIdentifierStart(exprICode(index)) ||\r\n\t\t\t\t\t\t\t\t(index+to_check.length < expr.length && !isIdentifierPart(exprICode(index+to_check.length)))\r\n\t\t\t\t\t\t\t)) {\r\n\t\t\t\t\t\t\t\tindex += tc_len;\r\n\t\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\t\ttype: UNARY_EXP,\r\n\t\t\t\t\t\t\t\t\toperator: to_check,\r\n\t\t\t\t\t\t\t\t\targument: gobbleToken(),\r\n\t\t\t\t\t\t\t\t\tprefix: true\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tto_check = to_check.substr(0, --tc_len);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif (isIdentifierStart(ch) || ch === OPAREN_CODE) { // open parenthesis\r\n\t\t\t\t\t\t\t// `foo`, `bar.baz`\r\n\t\t\t\t\t\t\treturn gobbleVariable();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t},\r\n\t\t\t\t// Parse simple numeric literals: `12`, `3.4`, `.5`. Do this by using a string to\r\n\t\t\t\t// keep track of everything in the numeric literal and then calling `parseFloat` on that string\r\n\t\t\t\tgobbleNumericLiteral = function() {\r\n\t\t\t\t\tvar number = '', ch, chCode;\r\n\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(exprICode(index) === PERIOD_CODE) { // can start with a decimal marker\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\r\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) {\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tch = exprI(index);\r\n\t\t\t\t\tif(ch === 'e' || ch === 'E') { // exponent marker\r\n\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\tch = exprI(index);\r\n\t\t\t\t\t\tif(ch === '+' || ch === '-') { // exponent sign\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\twhile(isDecimalDigit(exprICode(index))) { //exponent itself\r\n\t\t\t\t\t\t\tnumber += exprI(index++);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!isDecimalDigit(exprICode(index-1)) ) {\r\n\t\t\t\t\t\t\tthrowError('Expected exponent (' + number + exprI(index) + ')', index);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tchCode = exprICode(index);\r\n\t\t\t\t\t// Check to make sure this isn't a variable name that start with a number (123abc)\r\n\t\t\t\t\tif(isIdentifierStart(chCode)) {\r\n\t\t\t\t\t\tthrowError('Variable names cannot start with a number (' +\r\n\t\t\t\t\t\t\t\t\tnumber + exprI(index) + ')', index);\r\n\t\t\t\t\t} else if(chCode === PERIOD_CODE) {\r\n\t\t\t\t\t\tthrowError('Unexpected period', index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\tvalue: parseFloat(number),\r\n\t\t\t\t\t\traw: number\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Parses a string literal, staring with single or double quotes with basic support for escape codes\r\n\t\t\t\t// e.g. `\"hello world\"`, `'this is\\nJSEP'`\r\n\t\t\t\tgobbleStringLiteral = function() {\r\n\t\t\t\t\tvar str = '', quote = exprI(index++), closed = false, ch;\r\n\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tch = exprI(index++);\r\n\t\t\t\t\t\tif(ch === quote) {\r\n\t\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if(ch === '\\\\') {\r\n\t\t\t\t\t\t\t// Check for all of the common escape codes\r\n\t\t\t\t\t\t\tch = exprI(index++);\r\n\t\t\t\t\t\t\tswitch(ch) {\r\n\t\t\t\t\t\t\t\tcase 'n': str += '\\n'; break;\r\n\t\t\t\t\t\t\t\tcase 'r': str += '\\r'; break;\r\n\t\t\t\t\t\t\t\tcase 't': str += '\\t'; break;\r\n\t\t\t\t\t\t\t\tcase 'b': str += '\\b'; break;\r\n\t\t\t\t\t\t\t\tcase 'f': str += '\\f'; break;\r\n\t\t\t\t\t\t\t\tcase 'v': str += '\\x0B'; break;\r\n\t\t\t\t\t\t\t\tdefault : str += ch;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tstr += ch;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif(!closed) {\r\n\t\t\t\t\t\tthrowError('Unclosed quote after \"'+str+'\"', index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\tvalue: str,\r\n\t\t\t\t\t\traw: quote + str + quote\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobbles only identifiers\r\n\t\t\t\t// e.g.: `foo`, `_value`, `$x1`\r\n\t\t\t\t// Also, this function checks if that identifier is a literal:\r\n\t\t\t\t// (e.g. `true`, `false`, `null`) or `this`\r\n\t\t\t\tgobbleIdentifier = function() {\r\n\t\t\t\t\tvar ch = exprICode(index), start = index, identifier;\r\n\r\n\t\t\t\t\tif(isIdentifierStart(ch)) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrowError('Unexpected ' + exprI(index), index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tch = exprICode(index);\r\n\t\t\t\t\t\tif(isIdentifierPart(ch)) {\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tidentifier = expr.slice(start, index);\r\n\r\n\t\t\t\t\tif(literals.hasOwnProperty(identifier)) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: LITERAL,\r\n\t\t\t\t\t\t\tvalue: literals[identifier],\r\n\t\t\t\t\t\t\traw: identifier\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t} else if(identifier === this_str) {\r\n\t\t\t\t\t\treturn { type: THIS_EXP };\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: IDENTIFIER,\r\n\t\t\t\t\t\t\tname: identifier\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobbles a list of arguments within the context of a function call\r\n\t\t\t\t// or array literal. This function also assumes that the opening character\r\n\t\t\t\t// `(` or `[` has already been gobbled, and gobbles expressions and commas\r\n\t\t\t\t// until the terminator character `)` or `]` is encountered.\r\n\t\t\t\t// e.g. `foo(bar, baz)`, `my_func()`, or `[bar, baz]`\r\n\t\t\t\tgobbleArguments = function(termination) {\r\n\t\t\t\t\tvar ch_i, args = [], node, closed = false;\r\n\t\t\t\t\twhile(index < length) {\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t\tif(ch_i === termination) { // done parsing\r\n\t\t\t\t\t\t\tclosed = true;\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t} else if (ch_i === COMMA_CODE) { // between expressions\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tnode = gobbleExpression();\r\n\t\t\t\t\t\t\tif(!node || node.type === COMPOUND) {\r\n\t\t\t\t\t\t\t\tthrowError('Expected comma', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\targs.push(node);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!closed) {\r\n\t\t\t\t\t\tthrowError('Expected ' + String.fromCharCode(termination), index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn args;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Gobble a non-literal variable name. This variable name may include properties\r\n\t\t\t\t// e.g. `foo`, `bar.baz`, `foo['bar'].baz`\r\n\t\t\t\t// It also gobbles function calls:\r\n\t\t\t\t// e.g. `Math.acos(obj.angle)`\r\n\t\t\t\tgobbleVariable = function() {\r\n\t\t\t\t\tvar ch_i, node;\r\n\t\t\t\t\tch_i = exprICode(index);\r\n\r\n\t\t\t\t\tif(ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\tnode = gobbleGroup();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode = gobbleIdentifier();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\twhile(ch_i === PERIOD_CODE || ch_i === OBRACK_CODE || ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\tif(ch_i === PERIOD_CODE) {\r\n\t\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\r\n\t\t\t\t\t\t\t\tcomputed: false,\r\n\t\t\t\t\t\t\t\tobject: node,\r\n\t\t\t\t\t\t\t\tproperty: gobbleIdentifier()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t} else if(ch_i === OBRACK_CODE) {\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: MEMBER_EXP,\r\n\t\t\t\t\t\t\t\tcomputed: true,\r\n\t\t\t\t\t\t\t\tobject: node,\r\n\t\t\t\t\t\t\t\tproperty: gobbleExpression()\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t\t\tif(ch_i !== CBRACK_CODE) {\r\n\t\t\t\t\t\t\t\tthrowError('Unclosed [', index);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\t} else if(ch_i === OPAREN_CODE) {\r\n\t\t\t\t\t\t\t// A function call is being made; gobble all the arguments\r\n\t\t\t\t\t\t\tnode = {\r\n\t\t\t\t\t\t\t\ttype: CALL_EXP,\r\n\t\t\t\t\t\t\t\t'arguments': gobbleArguments(CPAREN_CODE),\r\n\t\t\t\t\t\t\t\tcallee: node\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\t\tch_i = exprICode(index);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn node;\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Responsible for parsing a group of things within parentheses `()`\r\n\t\t\t\t// This function assumes that it needs to gobble the opening parenthesis\r\n\t\t\t\t// and then tries to gobble everything within that parenthesis, assuming\r\n\t\t\t\t// that the next thing it should see is the close parenthesis. If not,\r\n\t\t\t\t// then the expression probably doesn't have a `)`\r\n\t\t\t\tgobbleGroup = function() {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tvar node = gobbleExpression();\r\n\t\t\t\t\tgobbleSpaces();\r\n\t\t\t\t\tif(exprICode(index) === CPAREN_CODE) {\r\n\t\t\t\t\t\tindex++;\r\n\t\t\t\t\t\treturn node;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrowError('Unclosed (', index);\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\r\n\t\t\t\t// Responsible for parsing Array literals `[1, 2, 3]`\r\n\t\t\t\t// This function assumes that it needs to gobble the opening bracket\r\n\t\t\t\t// and then tries to gobble the expressions as arguments.\r\n\t\t\t\tgobbleArray = function() {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\ttype: ARRAY_EXP,\r\n\t\t\t\t\t\telements: gobbleArguments(CBRACK_CODE)\r\n\t\t\t\t\t};\r\n\t\t\t\t},\r\n\r\n\t\t\t\tnodes = [], ch_i, node;\r\n\r\n\t\t\twhile(index < length) {\r\n\t\t\t\tch_i = exprICode(index);\r\n\r\n\t\t\t\t// Expressions can be separated by semicolons, commas, or just inferred without any\r\n\t\t\t\t// separators\r\n\t\t\t\tif(ch_i === SEMCOL_CODE || ch_i === COMMA_CODE) {\r\n\t\t\t\t\tindex++; // ignore separators\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Try to gobble each expression individually\r\n\t\t\t\t\tif((node = gobbleExpression())) {\r\n\t\t\t\t\t\tnodes.push(node);\r\n\t\t\t\t\t// If we weren't able to find a binary expression and are out of room, then\r\n\t\t\t\t\t// the expression passed in probably has too much\r\n\t\t\t\t\t} else if(index < length) {\r\n\t\t\t\t\t\tthrowError('Unexpected \"' + exprI(index) + '\"', index);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// If there's only one expression just try returning the expression\r\n\t\t\tif(nodes.length === 1) {\r\n\t\t\t\treturn nodes[0];\r\n\t\t\t} else {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: COMPOUND,\r\n\t\t\t\t\tbody: nodes\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t// To be filled in by the template\r\n\tjsep.version = '0.3.4';\r\n\tjsep.toString = function() { return 'JavaScript Expression Parser (JSEP) v' + jsep.version; };\r\n\r\n\t/**\r\n\t * @method jsep.addUnaryOp\r\n\t * @param {string} op_name The name of the unary op to add\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addUnaryOp = function(op_name) {\r\n\t\tmax_unop_len = Math.max(op_name.length, max_unop_len);\r\n\t\tunary_ops[op_name] = t; return this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.addBinaryOp\r\n\t * @param {string} op_name The name of the binary op to add\r\n\t * @param {number} precedence The precedence of the binary op (can be a float)\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addBinaryOp = function(op_name, precedence) {\r\n\t\tmax_binop_len = Math.max(op_name.length, max_binop_len);\r\n\t\tbinary_ops[op_name] = precedence;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.addLiteral\r\n\t * @param {string} literal_name The name of the literal to add\r\n\t * @param {*} literal_value The value of the literal\r\n\t * @return jsep\r\n\t */\r\n\tjsep.addLiteral = function(literal_name, literal_value) {\r\n\t\tliterals[literal_name] = literal_value;\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeUnaryOp\r\n\t * @param {string} op_name The name of the unary op to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeUnaryOp = function(op_name) {\r\n\t\tdelete unary_ops[op_name];\r\n\t\tif(op_name.length === max_unop_len) {\r\n\t\t\tmax_unop_len = getMaxKeyLen(unary_ops);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllUnaryOps\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllUnaryOps = function() {\r\n\t\tunary_ops = {};\r\n\t\tmax_unop_len = 0;\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeBinaryOp\r\n\t * @param {string} op_name The name of the binary op to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeBinaryOp = function(op_name) {\r\n\t\tdelete binary_ops[op_name];\r\n\t\tif(op_name.length === max_binop_len) {\r\n\t\t\tmax_binop_len = getMaxKeyLen(binary_ops);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllBinaryOps\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllBinaryOps = function() {\r\n\t\tbinary_ops = {};\r\n\t\tmax_binop_len = 0;\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeLiteral\r\n\t * @param {string} literal_name The name of the literal to remove\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeLiteral = function(literal_name) {\r\n\t\tdelete literals[literal_name];\r\n\t\treturn this;\r\n\t};\r\n\r\n\t/**\r\n\t * @method jsep.removeAllLiterals\r\n\t * @return jsep\r\n\t */\r\n\tjsep.removeAllLiterals = function() {\r\n\t\tliterals = {};\r\n\r\n\t\treturn this;\r\n\t};\r\n\r\n\t// In desktop environments, have a way to restore the old value for `jsep`\r\n\tif (typeof exports === 'undefined') {\r\n\r\n\t\tif(!root){\r\n\t\t\treturn  jsep;\r\n\t\t}\r\n\t\tvar old_jsep = root.jsep;\r\n\t\t// The star of the show! It's a function!\r\n\t\troot.jsep = jsep;\r\n\t\t// And a courteous function willing to move out of the way for other similarly-named objects!\r\n\t\tjsep.noConflict = function() {\r\n\t\t\tif(root.jsep === jsep) {\r\n\t\t\t\troot.jsep = old_jsep;\r\n\t\t\t}\r\n\t\t\treturn jsep;\r\n\t\t};\r\n\t} else {\r\n\t\t// In Node.JS environments\r\n\t\tif ( true && module.exports) {\r\n\t\t\texports = module.exports = jsep;\r\n\t\t} else {\r\n\t\t\texports.parse = jsep;\r\n\t\t}\r\n\t}\r\n}(undefined));\r\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./src/lib/jsep/jsep.js?");

/***/ })

/******/ });